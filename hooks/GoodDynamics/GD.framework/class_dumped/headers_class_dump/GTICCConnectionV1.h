//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "GTICCConnectionBridge.h"

#import "GCDAsyncSocketDelegate.h"

@class GCDAsyncSocket, NSString;

@interface GTICCConnectionV1 : GTICCConnectionBridge <GCDAsyncSocketDelegate>
{
    int _activeFileDescriptor;
    int _port;
    basic_string_075b6133 _pendingData;
    basic_string_075b6133 _command;
    basic_string_075b6133 _currentAttachmentName;
    basic_string_075b6133 _currentMessageTimestamp;
    NSString *_attachmentName;
    int _readState;
    int _commandLength;
    int _numAttach;
    int _attachNameLength;
    int _currentAttachLength;
    int _writtenToFile;
    int _currentAttachNumber;
    BOOL _isSecure;
    BOOL _isSocketConnected;
    GCDAsyncSocket *_socket;
    GCDAsyncSocket *_connectedSocket;
}

@property(nonatomic) BOOL isSocketConnected; // @synthesize isSocketConnected=_isSocketConnected;
@property(nonatomic) BOOL isSecure; // @synthesize isSecure=_isSecure;
@property(retain) GCDAsyncSocket *connectedSocket; // @synthesize connectedSocket=_connectedSocket;
@property(retain) GCDAsyncSocket *socket; // @synthesize socket=_socket;
- (id).cxx_construct;
- (void).cxx_destruct;
- (int)send:(id)arg1 attachments:(id)arg2;
- (BOOL)sendFileAttachments:(id)arg1;
- (BOOL)sendFile:(id)arg1;
- (BOOL)sendData:(id)arg1 tag:(int)arg2;
- (void)processCommand;
- (void)readData:(id)arg1;
- (void)clearReadParameters;
- (id)obtainCertificate;
- (void)socket:(id)arg1 didReadData:(id)arg2 withTag:(long)arg3;
- (void)socketDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)socketDidSecure:(id)arg1;
- (void)socket:(id)arg1 didWriteDataWithTag:(long)arg2;
- (void)socket:(id)arg1 didAcceptNewSocket:(id)arg2;
- (void)socket:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3;
- (struct __SecIdentity *)generateIdentifyRef;
- (int)port;
- (_Bool)createClientOnPort:(int)arg1 readBufferSize:(int)arg2 writeBufferSize:(int)arg3;
- (_Bool)createClientOnPort:(int)arg1;
- (_Bool)createServerWithReadBufferSize:(int)arg1 writeBufferSize:(int)arg2;
- (_Bool)createServer;
- (BOOL)connect:(int)arg1;
- (void)close;
- (void)dealloc;
- (id)initForApplication:(id)arg1 isClient:(BOOL)arg2;

@end

