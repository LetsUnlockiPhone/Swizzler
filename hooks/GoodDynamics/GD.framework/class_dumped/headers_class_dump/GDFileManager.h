//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSFileManager.h"

#import "NSStreamDelegate.h"

@class NSString;

@interface GDFileManager : NSFileManager <NSStreamDelegate>
{
    id _delegate;
}

+ (int)getGDErrorDomainCode:(int)arg1;
+ (id)defaultManager;
- (BOOL)isFileEncrypted:(id)arg1;
- (BOOL)shouldContinueAfterMoveError:(id)arg1 withSrcURL:(id)arg2 andDstURL:(id)arg3;
- (BOOL)shouldContinueAfterCopyError:(id)arg1 withSrcURL:(id)arg2 andDstURL:(id)arg3;
- (BOOL)isFileReferenceURL:(id)arg1;
- (id)processRelativePath:(id)arg1;
- (int)createErrorObject:(id)arg1 errnoVal:(int)arg2 errorObj:(id *)arg3;
- (id)decryptURL:(id)arg1;
- (id)decryptFullPath:(id)arg1;
- (id)decryptFullPathIfNecessary:(id)arg1;
- (id)decryptPath:(id)arg1;
- (id)originalFileURLWithPath:(id)arg1;
- (id)convertToSecureContainerURL:(id)arg1;
- (id)convertToSecureContainerURLIfNecessary:(id)arg1;
- (id)convertToSecureContainerPath:(id)arg1 resolve:(BOOL)arg2;
- (id)convertToSecureContainerPath:(id)arg1;
- (id)convertToSecureContainerPathIfNecessary:(id)arg1;
- (id)uniqueFolderNameAtPath:(id)arg1;
- (BOOL)shouldUseDefaultManagerWithPath:(id)arg1;
- (BOOL)shouldUseDefaultManagerWithURL:(id)arg1;
- (id)pathContentOfSymbolicLinkAtPath:(id)arg1;
- (id)fileSystemAttributesAtPath:(id)arg1;
- (id)fileAttributesAtPath:(id)arg1 traverseLink:(BOOL)arg2;
- (id)directoryContentsAtPath:(id)arg1;
- (BOOL)createSymbolicLinkAtPath:(id)arg1 pathContent:(id)arg2;
- (BOOL)createDirectoryAtPath:(id)arg1 attributes:(id)arg2;
- (BOOL)changeFileAttributes:(id)arg1 atPath:(id)arg2;
- (id)currentDirectoryPath;
- (BOOL)changeCurrentDirectoryPath:(id)arg1;
@property id delegate; // @synthesize delegate=_delegate;
- (id)stringWithFileSystemRepresentation:(const char *)arg1 length:(unsigned int)arg2;
- (const char *)fileSystemRepresentationWithPath:(id)arg1;
- (BOOL)contentsEqualAtPath:(id)arg1 andPath:(id)arg2;
- (id)contentsAtPath:(id)arg1;
- (BOOL)setAttributes:(id)arg1 ofItemAtPath:(id)arg2 error:(id *)arg3;
- (id)attributesOfFileSystemForPath:(id)arg1 error:(id *)arg2;
- (id)attributesOfItemAtPath:(id)arg1 error:(id *)arg2;
- (id)displayNameAtPath:(id)arg1;
- (id)componentsToDisplayForPath:(id)arg1;
- (BOOL)isDeletableFileAtPath:(id)arg1;
- (BOOL)isExecutableFileAtPath:(id)arg1;
- (BOOL)isWritableFileAtPath:(id)arg1;
- (BOOL)isReadableFileAtPath:(id)arg1;
- (BOOL)fileExistsAtPath:(id)arg1 isDirectory:(char *)arg2;
- (BOOL)fileExistsAtPath:(id)arg1;
- (id)destinationOfSymbolicLinkAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)linkItemAtPath:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (BOOL)linkItemAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (BOOL)createSymbolicLinkAtPath:(id)arg1 withDestinationPath:(id)arg2 error:(id *)arg3;
- (BOOL)createSymbolicLinkAtURL:(id)arg1 withDestinationURL:(id)arg2 error:(id *)arg3;
- (id)URLForPublishingUbiquitousItemAtURL:(id)arg1 expirationDate:(id *)arg2 error:(id *)arg3;
- (BOOL)evictUbiquitousItemAtURL:(id)arg1 error:(id *)arg2;
- (BOOL)startDownloadingUbiquitousItemAtURL:(id)arg1 error:(id *)arg2;
- (BOOL)setUbiquitous:(BOOL)arg1 itemAtURL:(id)arg2 destinationURL:(id)arg3 error:(id *)arg4;
- (BOOL)isUbiquitousItemAtURL:(id)arg1;
- (id)URLForUbiquityContainerIdentifier:(id)arg1;
- (id)ubiquityIdentityToken;
- (BOOL)moveItemAtPath:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (BOOL)moveItemAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3 useNameEnforcement:(BOOL)arg4;
- (BOOL)moveItemAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (BOOL)copyItemAtPath:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (BOOL)copyItemAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (BOOL)replaceItemAtURL:(id)arg1 withItemAtURL:(id)arg2 backupItemName:(id)arg3 options:(unsigned int)arg4 resultingItemURL:(id *)arg5 error:(id *)arg6;
- (BOOL)removeItemAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)removeItemAtURL:(id)arg1 error:(id *)arg2;
- (BOOL)createFileAtPath:(id)arg1 contents:(id)arg2 attributes:(id)arg3;
- (BOOL)createDirectoryAtPath:(id)arg1 withIntermediateDirectories:(BOOL)arg2 attributes:(id)arg3 error:(id *)arg4;
- (BOOL)createDirectoryAtURL:(id)arg1 withIntermediateDirectories:(BOOL)arg2 attributes:(id)arg3 error:(id *)arg4;
- (id)subpathsAtPath:(id)arg1;
- (id)subpathsOfDirectoryAtPath:(id)arg1 error:(id *)arg2;
- (id)mountedVolumeURLsIncludingResourceValuesForKeys:(id)arg1 options:(unsigned int)arg2;
- (id)enumeratorAtPath:(id)arg1;
- (id)enumeratorAtURL:(id)arg1 includingPropertiesForKeys:(id)arg2 options:(unsigned int)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (id)contentsOfDirectoryAtPath:(id)arg1 error:(id *)arg2;
- (id)contentsOfDirectoryAtURL:(id)arg1 includingPropertiesForKeys:(id)arg2 options:(unsigned int)arg3 error:(id *)arg4;
- (id)URLsForDirectory:(unsigned int)arg1 inDomains:(unsigned int)arg2;
- (id)URLForDirectory:(unsigned int)arg1 inDomain:(unsigned int)arg2 appropriateForURL:(id)arg3 create:(BOOL)arg4 error:(id *)arg5;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

