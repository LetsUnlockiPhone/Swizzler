/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "GTICCConnectionBridge.h"

#import "GTICCConnectionDelegate-Protocol.h"

@class NSMutableArray, NSString;

@interface GTICCConnectionV2 : GTICCConnectionBridge <GTICCConnectionDelegate>
{
    struct ICCConnection *_connection;
    struct ICCConnectionListener *_connectionListener;
    BOOL _sendingRouteToClient;
    NSMutableArray *_attachmentsList;
    NSString *_messageType;
    NSString *_receivingRequestId;
}

- (void)onError:(struct ICCConnection *)fp8 error:(int)fp12 message:(const struct basic_string<char, std::char_traits<char>, std::allocator<char>> *)fp16;
- (void)onClosing:(struct ICCConnection *)fp8;
- (void)onFinishedReceivingData:(struct ICCConnection *)fp8 jsonCommand:(const struct basic_string<char, std::char_traits<char>, std::allocator<char>> *)fp12;
- (_Bool)onReceiveAttachmentData:(struct ICCConnection *)fp8 data:(const char *)fp12 size:(int)fp16 filename:(const struct basic_string<char, std::char_traits<char>, std::allocator<char>> *)fp20 finalBlock:(_Bool)fp24 jsonCommand:(const struct basic_string<char, std::char_traits<char>, std::allocator<char>> *)fp28;
- (void)onFinishedSendingData:(struct ICCConnection *)fp8;
- (_Bool)onReadyToSendAttachmentData:(struct ICCConnection *)fp8 filename:(const struct basic_string<char, std::char_traits<char>, std::allocator<char>> *)fp12;
- (_Bool)onConnected:(struct ICCConnection *)fp8 peerCertificateAsDER:(const struct basic_string<char, std::char_traits<char>, std::allocator<char>> *)fp12;
- (_Bool)onReadyToConnect:(struct ICCConnection *)fp8 certificateAsDER:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> *)fp12 privateKey:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> *)fp16;
- (BOOL)sendFile:(id)fp8;
- (int)directSend:(id)fp8 attachments:(id)fp12;
- (int)send:(id)fp8 attachments:(id)fp12;
- (void)close;
- (int)port;
- (_Bool)createClientOnPort:(int)fp8 readBufferSize:(int)fp12 writeBufferSize:(int)fp16;
- (_Bool)createClientOnPort:(int)fp8;
- (_Bool)createServerWithReadBufferSize:(int)fp8 writeBufferSize:(int)fp12;
- (_Bool)createServer;
- (BOOL)connect:(int)fp8;
- (void)dealloc;
- (id)initForApplication:(id)fp8 isClient:(BOOL)fp12;

@end

