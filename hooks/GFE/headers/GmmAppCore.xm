%group GFE
//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

//
// SDK Root: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.1.sdk/
//

// #import "NSObject.h"

// #import "UIActionSheetDelegate.h"
// #import "UIAlertViewDelegate.h"

// @class ActivityViewController, AppStorePolicyManager, CalendarCore, ContactSyncThread, GUAlertView, NSArray, NSMutableArray, NSMutableDictionary, NSSet, NSString, NSTimer, NSURL, SBCore, SBNetworkStateMonitor, SBPolicyMgr, SBUserPreferences, SecurityCore, ServerPrefsWrapper, SmimeManagersContainer, UIActionSheet, UIView, UrlInterceptionMgr;

// @interface GmmAppCore : NSObject <UIActionSheetDelegate, UIAlertViewDelegate>
// {
//     ContactSyncThread *contactSyncThread;
//     UIActionSheet *initialContactSynchroQuestion;
//     ServerPrefsWrapper *serverPrefsWrapper;
//     struct AListener *syncEngineStartupListener;
//     struct AListener *optionsDbListener;
//     struct AListener *emailDbListener;
//     struct AListener *otaPolicyUpdateListener;
//     struct AListener *tasksDbListner;
//     BOOL contactSyncDisabled;
//     BOOL isSyncEngineInited;
//     BOOL hasRunStartupItems;
//     SecurityCore *securityCore;
//     BOOL provisioned;
//     CalendarCore *calendar;
//     BOOL firstStartup;
//     ActivityViewController *activityVC;
//     UIView *maskingView;
//     BOOL isShowingActivityView;
//     BOOL isShowingMaskingView;
//     BOOL bAccountDisable;
//     BOOL generatedGDGK;
//     BOOL ftpSendingBackground;
//     NSArray *_savedOsVersion;
//     UrlInterceptionMgr *urlInterceptionMgr;
//     SBPolicyMgr *sbPolicyMgr;
//     SBNetworkStateMonitor *_sbNetworkStateMonitor;
//     BOOL deviceSupportsBrowser;
//     BOOL _sendingWebApplicationUpdate;
//     NSMutableArray *_sounds;
//     NSMutableDictionary *_dictSoundFileAndSystemID;
//     NSArray *_soundFileNames;
//     NSMutableArray *_statusBars;
//     int _networkRetainCount;
//     NSMutableDictionary *_expandedFoldersInfo;
//     NSMutableDictionary *_foldersSubscriptionStatus;
//     int _uiTypeToDisplayOnStartup;
//     BOOL _derivedCertReceived;
//     NSTimer *_timerSnoozeForMCInstall;
//     BOOL _sendDerivedCertificate;
//     BOOL _isDownloadConfigUIAlreadyDisplayed;
//     BOOL _shouldDismissRetryAlertIOS8Fix;
//     NSSet *_deniedExternalSmtpDomains;
//     NSString *_deniedExternalSmtpWarnMsg;
//     BOOL _isSendAttachGoodWhiteList;
//     BOOL _isSendAttachEnabled;
//     NSArray *_importFileTypes;
//     NSMutableArray *_goodPartnerAppWipeList;
//     int _sendAttachExtsBySizeInKBLimit;
//     BOOL _isOpenWithWhiteList;
//     BOOL _isOpenWithEnabled;
//     BOOL _isDocumentsEnabled;
//     BOOL _isOpenWithSupportedByOS;
//     BOOL _isRecvAttachExtsEnabled;
//     BOOL _isRecvAttachExtsIsWhiteList;
//     NSArray *_recvFileTypes;
//     int _recvAttachExtsBySizeInKBLimit;
//     NSArray *_appIds;
//     SmimeManagersContainer *smimeUiManagers;
//     AppStorePolicyManager *appStorePolicyManager;
//     BOOL _isProcessingDeviceDisabled;
//     NSString *_requiredAuthenticatorApplicationIdentifier;
//     NSString *_requiredSMIMEApplicationIdentifier;
//     NSURL *_requiredAuthenticatorDownloadURL;
//     NSURL *_requiredSMIMEDownloadURL;
//     BOOL _sqlDbInited;
//     BOOL _siriDictationDisabled;
//     BOOL _usingCustomNotificationSounds;
//     SBCore *_sbCore;
//     BOOL _isConversationThreadingEnabled;
//     struct auto_ptr<GmmSecureStringStorage> _gmmSecureStringStorage;
//     GUAlertView *retryAlert;
//     SBUserPreferences *_sbUserPreferences;
//     unsigned int _firstDayOfCalendar;
// }
%hook GmmAppCore

// + (BOOL)isMultitaskingSupported;
// + (BOOL)isOs6OrAbove;
// + (BOOL)isOs5OrAbove;
// + (BOOL)isOs4OrAbove;
// + (id)osVersion;
+ (void)triggerWD:(id)arg1
{
    NSLog(@"GmmAppCore triggerWD: %@", arg1);

    NSMutableDictionary *plist = [[NSMutableDictionary alloc] initWithContentsOfFile:@PREFERENCEFILE];
    if (![[plist objectForKey:@"settings_HookGFE_remotewipe"] boolValue])
    {
        %orig;
    }
};
// + (void)presentUnseenTourScreensAnimated:(BOOL)arg1 fromPreferences:(BOOL)arg2;
// + (void)presentPhoneRegistrationWithTourScreen:(BOOL)arg1;
// + (void)print_free_memory;
// + (id)rootFilePath;
// + (BOOL)isGalleryAllowedFor:(int)arg1;
// + (BOOL)isCameraAllowedFor:(int)arg1;
// + (BOOL)applicationAllowed:(id)arg1;
// + (id)instance;
// @property(readonly, nonatomic) SBUserPreferences *sbUserPreferences; // @synthesize sbUserPreferences=_sbUserPreferences;
// @property(retain, nonatomic) SBNetworkStateMonitor *sbNetworkStateMonitor; // @synthesize sbNetworkStateMonitor=_sbNetworkStateMonitor;
// @property(nonatomic) SBCore *sbCore; // @synthesize sbCore=_sbCore;
// @property(retain, nonatomic) NSArray *soundFileNames; // @synthesize soundFileNames=_soundFileNames;
// @property(nonatomic) BOOL usingCustomNotificationSounds; // @synthesize usingCustomNotificationSounds=_usingCustomNotificationSounds;
// @property(nonatomic) BOOL siriDictationDisabled; // @synthesize siriDictationDisabled=_siriDictationDisabled;
// @property BOOL sendingWebApplicationUpdate; // @synthesize sendingWebApplicationUpdate=_sendingWebApplicationUpdate;
// @property(retain, nonatomic) AppStorePolicyManager *appStorePolicyManager; // @synthesize appStorePolicyManager;
// @property(retain, nonatomic) NSMutableArray *goodPartnerAppWipeList; // @synthesize goodPartnerAppWipeList=_goodPartnerAppWipeList;
// @property(readonly, nonatomic) int recvAttachExtsBySizeInKBLimit; // @synthesize recvAttachExtsBySizeInKBLimit=_recvAttachExtsBySizeInKBLimit;
// @property(readonly, nonatomic) NSArray *recvFileTypes; // @synthesize recvFileTypes=_recvFileTypes;
// @property(readonly, nonatomic) BOOL isDocumentsEnabled; // @synthesize isDocumentsEnabled=_isDocumentsEnabled;
// @property(readonly, nonatomic) BOOL isRecvAttachExtsIsWhiteList; // @synthesize isRecvAttachExtsIsWhiteList=_isRecvAttachExtsIsWhiteList;
// @property(readonly, nonatomic) BOOL isRecvAttachExtsEnabled; // @synthesize isRecvAttachExtsEnabled=_isRecvAttachExtsEnabled;
// @property(nonatomic, getter=sendAttachExtsBySizeInKBLimit) int sendAttachExtsBySizeInKBLimit; // @synthesize sendAttachExtsBySizeInKBLimit=_sendAttachExtsBySizeInKBLimit;
// @property(retain, nonatomic, getter=importFileTypes) NSArray *importFileTypes; // @synthesize importFileTypes=_importFileTypes;
// @property(nonatomic, getter=isSendAttachEnabled) BOOL isSendAttachEnabled; // @synthesize isSendAttachEnabled=_isSendAttachEnabled;
// @property(nonatomic, getter=isSendAttachGoodWhiteList) BOOL isSendAttachGoodWhiteList; // @synthesize isSendAttachGoodWhiteList=_isSendAttachGoodWhiteList;
// @property(nonatomic, getter=isOpenWithSupportedByOS) BOOL isOpenWithSupportedByOS; // @synthesize isOpenWithSupportedByOS=_isOpenWithSupportedByOS;
// @property(retain, nonatomic, getter=appIds) NSArray *appIds; // @synthesize appIds=_appIds;
// @property(nonatomic, getter=isOpenWithEnabled) BOOL isOpenWithEnabled; // @synthesize isOpenWithEnabled=_isOpenWithEnabled;
// @property(nonatomic, getter=isOpenWithWhiteList) BOOL isOpenWithWhiteList; // @synthesize isOpenWithWhiteList=_isOpenWithWhiteList;
// @property(retain, nonatomic, getter=deniedExternalSmtpWarnMsg) NSString *deniedExternalSmtpWarnMsg; // @synthesize deniedExternalSmtpWarnMsg=_deniedExternalSmtpWarnMsg;
// @property(retain, nonatomic, getter=deniedExternalSmtpDomains) NSSet *deniedExternalSmtpDomains; // @synthesize deniedExternalSmtpDomains=_deniedExternalSmtpDomains;
// @property(nonatomic) BOOL isProcessingDeviceDisabled; // @synthesize isProcessingDeviceDisabled=_isProcessingDeviceDisabled;
// @property(nonatomic) BOOL deviceSupportsBrowser; // @synthesize deviceSupportsBrowser;
// @property(retain, nonatomic) SBPolicyMgr *sbPolicyMgr; // @synthesize sbPolicyMgr;
// @property(retain, nonatomic) UrlInterceptionMgr *urlInterceptionMgr; // @synthesize urlInterceptionMgr;
// @property(nonatomic) BOOL ftpSendingBackground; // @synthesize ftpSendingBackground;
// @property(readonly, nonatomic) SmimeManagersContainer *smimeUiManagers; // @synthesize smimeUiManagers;
// @property BOOL sendDerivedCertificate; // @synthesize sendDerivedCertificate=_sendDerivedCertificate;
// @property(retain, nonatomic) NSArray *savedOsVersion; // @synthesize savedOsVersion=_savedOsVersion;
// @property BOOL derivedCertReceived; // @synthesize derivedCertReceived=_derivedCertReceived;
// @property int uiTypeToDisplayOnStartup; // @synthesize uiTypeToDisplayOnStartup=_uiTypeToDisplayOnStartup;
// @property(retain, nonatomic) NSMutableDictionary *foldersSubscriptionStatus; // @synthesize foldersSubscriptionStatus=_foldersSubscriptionStatus;
// @property(retain, nonatomic) NSMutableDictionary *expandedFoldersInfo; // @synthesize expandedFoldersInfo=_expandedFoldersInfo;
// @property(retain, nonatomic) NSMutableArray *statusBars; // @synthesize statusBars=_statusBars;
// @property(nonatomic) BOOL bAccountDisable; // @synthesize bAccountDisable;
// @property(nonatomic) BOOL firstStartup; // @synthesize firstStartup;
// @property(retain, nonatomic) CalendarCore *calendar; // @synthesize calendar;
// @property(nonatomic) BOOL provisioned; // @synthesize provisioned;
// @property(retain, nonatomic) SecurityCore *securityCore; // @synthesize securityCore;
// @property(nonatomic) BOOL isSyncEngineInited; // @synthesize isSyncEngineInited;
// @property BOOL contactSyncDisabled; // @synthesize contactSyncDisabled;
// @property(retain, nonatomic) ServerPrefsWrapper *serverPrefsWrapper; // @synthesize serverPrefsWrapper;
// @property(retain, nonatomic) GUAlertView *retryAlert; // @synthesize retryAlert;
// @property(retain, nonatomic) ContactSyncThread *contactSyncThread; // @synthesize contactSyncThread;
// - (id).cxx_construct;
// - (void).cxx_destruct;
// - (struct GmmSecureStringStorage *)getSecureStringStorage;
// @property(nonatomic) unsigned int firstDayOfCalendar; // @synthesize firstDayOfCalendar=_firstDayOfCalendar;
// @property(nonatomic) BOOL isConversationThreadingEnabled;
// - (BOOL)isGoodVaultAuthenticatorDelegationPolicyEnabled;
// - (id)requiredSMIMEDownloadURL;
// - (id)requiredSMIMEApplicationIdentifier;
// - (id)requiredAuthenticatorDownloadURL;
// - (id)requiredAuthenticatorApplicationIdentifier;
// - (int)canSendOrSave:(id)arg1;
// - (id)genericPolicy;
// - (void)freeUpMemory;
// - (void)initializeSMIMEUI;
// - (void)loadGenericPolicy;
// - (void)loadGoodVaultPolicy;
// - (BOOL)isDownloadConfigUIAlreadyDisplayed;
// - (BOOL)startSnoozeTimerForMCInstall;
// - (void)stopSnoozeTimerForMCInstallIfActive;
// - (void)showDownloadIPhoneConfigUI:(int)arg1;
// - (void)applicationDidBecomeActive:(id)arg1;
// - (void)safariPresent:(id)arg1;
// - (void)launchSafariWithPSUrl;
// - (int)verifyCertificateTrust;
// - (void)showMaskingView:(BOOL)arg1;
// - (void)goodContactWarningHit:(int)arg1;
// - (void)onAddressBookCleared;
// - (void)showActivityView:(BOOL)arg1 withMessage:(id)arg2;
// - (void)networkReleaseForce;
// - (void)networkRelease;
// - (void)networkRetain;
// - (BOOL)isRemoteNotificationSoundDisabled;
// - (BOOL)playSound:(int)arg1 sender:(id)arg2;
// - (BOOL)playSoundFile:(id)arg1;
// - (void)enableSyncWithAddressBook:(BOOL)arg1;
// - (void)start2WayContactSync:(BOOL)arg1;
// - (void)alertView:(id)arg1 clickedButtonAtIndex:(int)arg2;
// - (void)actionSheet:(id)arg1 clickedButtonAtIndex:(int)arg2;
// - (void)mobileConfigSnoozeTimerFired:(id)arg1;
// - (void)saveInt:(int)arg1 inPrefsWithKey:(id)arg2;
// - (void)dealloc;
// - (void)gracefulShutdown;
// - (void)syncComplete;
// - (void)performInitialContactSync;
// - (void)terminateContactSyncThreadWaitUntilDone:(BOOL)arg1;
// - (void)startContactSyncThreadWaitForInited:(BOOL)arg1;
// - (void)invokePerformInitialContactSync:(id)arg1;
// - (void)scheduleInvokePerformInitialContactSyncWithInterval:(double)arg1;
// - (void)onOptionsDbNotif:(id)arg1;
// - (void)onEmailDbNotif:(id)arg1;
// - (void)onTaskDbNotif:(id)arg1;
// - (void)onOtaPolicyUpdateNotif:(id)arg1;
// - (BOOL)isOTAFeatureSetUpdated;
// - (void)otaPolicyUpdateCheck;
// - (BOOL)disabledDueToDeviceWipe
// {
//     BOOL ret = %orig;
//     NSLog(@"GmmAppCore disabledDueToDeviceWipe: %d", ret);
//     return ret;
// };
// - (void)setIsRemoteLocked:(BOOL)arg1
// {
//     NSLog(@"GmmAppCore setIsRemoteLocked: %d", arg1);
//     %orig;
// };

- (BOOL)isRemoteLocked
{
    BOOL ret = %orig;
    NSLog(@"GmmAppCore isRemoteLocked: %d", ret);

    NSMutableDictionary *plist = [[NSMutableDictionary alloc] initWithContentsOfFile:@PREFERENCEFILE];
    if ([[plist objectForKey:@"settings_HookGFE_remotelock"] boolValue])
    {
        return 0;
    }

    return ret;
};

// @property(readonly, nonatomic) BOOL isUnlocked;
// - (BOOL)wipeNextGPAppInList
// {
//     BOOL ret = %orig;
//     NSLog(@"GmmAppCore wipeNextGPAppInList: %d", ret);
//     return ret;
// };

// - (void)wipeDeviceFileSystem
// {
//     NSLog(@"GmmAppCore wipeDeviceFileSystem");
//     // %orig;
// };

// - (void)completeWipeDevice
// {
//     NSLog(@"GmmAppCore completeWipeDevice");
//     // %orig;
// };
// - (void)processUserStatusChanged;
// - (void)onOtapComplete;
// - (void)onProvisioned;
// - (BOOL)setOwnerInfo;
// - (BOOL)isAppStorePolicyManagerLoaded;
// - (void)onSyncEngineInited;
// - (void)pauseUIUpdates;
// - (void)resumeUIUpdates;
- (BOOL)isWorkOnlineEnabled
{
    BOOL ret = %orig;
    NSLog(@"GmmAppCore isWorkOnlineEnabled: %d", ret);
    return ret;
};

- (void)enableWorkOnline
{
    NSLog(@"GmmAppCore enableWorkOnline");
    %orig;
};
// - (void)getCurrentLocaleDisclaimerText:(const struct GxUTF8String *)arg1 disclaimerText:(struct GxUTF8String *)arg2;
- (void)documentsDisabled
{
    NSLog(@"GmmAppCore documentsDisabled");
    %orig;
};
- (void)documentsEnabled
{
    NSLog(@"GmmAppCore documentsEnabled");
    %orig;
};
// - (void)showAlertViewDocumentsPolicyDisabled;
// - (void)dismissComplianceScreen;
// - (void)showDownloadIPhoneConfigUISelector:(id)arg1;
// - (void)verifyTrust;
// - (void)SendVerifictaionSuccess;
// - (void)ResetPushNotificationData:(int)arg1;
// - (void)ResetPushNotificationData;
// - (void)runStartupItems;
// - (void)loadSounds;
// - (id)displayNameForSound:(id)arg1;
// - (void)restoreLocalizedDisclaimerTextFromUserDefaults;
// - (void)setupURLCachePolicy;
// - (void)setupFirstStartupDefaults;
// - (void)setupDefaultSounds;
// @property(retain, nonatomic) NSString *soundsCalendarFile;
// - (id)setupDefaultCalendarSound;
// @property(retain, nonatomic) NSString *soundsEmailFile;
// - (id)setupDefaultEmailSound;
// @property(nonatomic) BOOL vibrationDisabled;
// @property(nonatomic) BOOL calVibrationDisabled;
// - (void)resetOtaListener;
// - (void)resyncDone;
// @property(nonatomic) BOOL soundsCalendarDisabled;
// @property(nonatomic) BOOL soundsEmailDisabled;
- (void)initSecureStringStorage
{
    NSLog(@"GmmAppCore initSecureStringStorage");
    %orig;
};
- (void)initSqlDb
{
    NSLog(@"GmmAppCore initSqlDb");
    %orig;
};
// - (id)init;

// @end
%end
%end
