%group GFE
//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

//
// SDK Root: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.1.sdk/
//

// #import "UIViewController.h"

// #import "GTServiceClientDelegate.h"
// #import "GTServiceDelegate.h"
// #import "UIAlertViewDelegate.h"

// @class DisclaimerViewController, GTContainerDH, GTService, GTServiceClient, GmmEasyActivationHandler, IncomingAttachment, NSLock, NSMutableDictionary, NSMutableSet, NSString, NSTimer, UIView;

// @interface SecurityCore : UIViewController <UIAlertViewDelegate, GTServiceClientDelegate, GTServiceDelegate>
// {
//     struct CSecurityManager *securityManager;
//     NSTimer *lockTimer;
//     BOOL isLocked;
//     BOOL isLockedOnDeviceIdScreen;
//     UIViewController *lockViewController;
//     DisclaimerViewController *disclaimerViewController;
//     UIView *_backgroundView;
//     BOOL _isGoodBaiNavControllerUsed;
//     BOOL _isCACSetupInProgress;
//     BOOL _settingsSaveScheduled;
//     BOOL _isPasswordScreenActive;
//     BOOL _isDisclaimerScreenActive;
//     BOOL _isConfirmPasswordScreenActive;
//     GTServiceClient *_gtICCService;
//     BOOL preventGVLock;
//     NSLock *_lock;
//     BOOL _shouldLockscreenBeReplaced;
//     int nAction;
//     GTContainerDH *authenticationDH;
//     GTService *_gtService;
//     NSMutableDictionary *_fileTransferAttachments;
//     IncomingAttachment *_incomingAttachment;
//     NSString *_receivedFilePath;
//     NSMutableSet *_passwordIdleTimerTextFields;
//     NSTimer *_passwordIdleTimer;
//     NSMutableDictionary *_gdRequestUserInfoMap;
//     GmmEasyActivationHandler *_gmmEasyActivationHandler;
// }
%hook SecurityCore

// + (id)convertParamsToRecipients:(id)arg1;
// + (int)classificationTypeFromString:(id)arg1;
+ (void)saveSettingsInBackground
{
    NSLog(@"SecurityCore saveSettingsInBackground");
    %orig;
};
// + (BOOL)encryptedWithRemoteAuthenticator;
// + (id)instance;
// @property(nonatomic) BOOL shouldLockscreenBeReplaced; // @synthesize shouldLockscreenBeReplaced=_shouldLockscreenBeReplaced;
// @property(retain, nonatomic) GmmEasyActivationHandler *gmmEasyActivationHandler; // @synthesize gmmEasyActivationHandler=_gmmEasyActivationHandler;
// @property(retain, nonatomic) NSMutableDictionary *gdRequestUserInfoMap; // @synthesize gdRequestUserInfoMap=_gdRequestUserInfoMap;
// @property(retain, nonatomic) NSTimer *passwordIdleTimer; // @synthesize passwordIdleTimer=_passwordIdleTimer;
// @property(retain, nonatomic) NSMutableSet *passwordIdleTimerTextFields; // @synthesize passwordIdleTimerTextFields=_passwordIdleTimerTextFields;
// @property(retain, nonatomic) NSString *receivedFilePath; // @synthesize receivedFilePath=_receivedFilePath;
// @property(retain, nonatomic) IncomingAttachment *incomingAttachment; // @synthesize incomingAttachment=_incomingAttachment;
// @property(retain, nonatomic) NSMutableDictionary *fileTransferAttachments; // @synthesize fileTransferAttachments=_fileTransferAttachments;
// @property(retain, nonatomic) GTService *gtService; // @synthesize gtService=_gtService;
// @property(nonatomic) BOOL preventGVLock; // @synthesize preventGVLock;
// @property(retain, nonatomic) GTContainerDH *authenticationDH; // @synthesize authenticationDH;
// @property(nonatomic) BOOL isPasswordScreenActive; // @synthesize isPasswordScreenActive=_isPasswordScreenActive;
// @property BOOL settingsSaveScheduled; // @synthesize settingsSaveScheduled=_settingsSaveScheduled;
// @property(nonatomic) BOOL isCACSetupInProgress; // @synthesize isCACSetupInProgress=_isCACSetupInProgress;
// @property(nonatomic) BOOL isGoodBaiNavControllerUsed; // @synthesize isGoodBaiNavControllerUsed=_isGoodBaiNavControllerUsed;
// @property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
// @property(nonatomic) DisclaimerViewController *disclaimerViewController; // @synthesize disclaimerViewController;
// @property(nonatomic) UIViewController *lockViewController; // @synthesize lockViewController;
// @property(nonatomic) int nAction; // @synthesize nAction;
// @property(nonatomic) BOOL isLockedOnDeviceIdScreen; // @synthesize isLockedOnDeviceIdScreen;
// @property(nonatomic) BOOL isLocked; // @synthesize isLocked;
// @property(retain, nonatomic) NSTimer *lockTimer; // @synthesize lockTimer;
// @property(nonatomic) struct CSecurityManager *securityManager; // @synthesize securityManager;
// - (void)didReceiveFilesFrom:(id)arg1 forService:(id)arg2 withParams:(id)arg3 withAttachments:(id)arg4 userInfo:(id)arg5;
// - (BOOL)requestMultipleFileFrom:(id)arg1 forDraftEmail:(int)arg2 withParams:(id)arg3 error:(id *)arg4;
// - (void)GTServiceDidReceiveAttachmentData:(id)arg1 withFilename:(id)arg2 lastBlock:(BOOL)arg3;
// - (void)handleReceivedFile:(id)arg1;
// - (void)GTServiceDidReceiveFrom:(id)arg1 forService:(id)arg2 withVersion:(id)arg3 forMethod:(id)arg4 withParams:(id)arg5 withAttachments:(id)arg6 forRequestID:(id)arg7;
// - (void)didReceiveFileTransferFrom:(id)arg1 forService:(id)arg2 withVersion:(id)arg3 forMethod:(id)arg4 withParams:(id)arg5 withAttachments:(id)arg6 forRequestID:(id)arg7;
// - (void)didReceiveSendEmailFrom:(id)arg1 forService:(id)arg2 withVersion:(id)arg3 forMethod:(id)arg4 withParams:(id)arg5 withAttachments:(id)arg6 forRequestID:(id)arg7;
// - (void)handleSendEmailDelayed:(id)arg1;
// - (BOOL)GTServiceDidConnectTo:(id)arg1 withClientCertificate:(id)arg2 withEnterpriseMatch:(BOOL)arg3;
// - (void)GTServiceDidReceiveConnectionRequest:(id)arg1 withServerCertificate:(id *)arg2 withServerCertificatePrivateKey:(id *)arg3 withPkcs12Password:(id *)arg4 withEnterpriseUserNumber:(int *)arg5;
// - (void)GTServiceDidReceiveAuthRequestFrom:(id)arg1 withPassword:(id *)arg2;
// - (void)GTServiceClientDidReceiveAuthResponse:(id)arg1 fromApplication:(id)arg2 wasSuccessful:(BOOL)arg3;
// - (void)GTServiceDidReceiveActivationRequestFrom:(id)arg1 withAppId:(id)arg2 withAppName:(id)arg3 withAppVersion:(id)arg4 withNonce:(id)arg5;
// - (BOOL)GTServiceClientWillSendAttachmentData:(id *)arg1 withDataBlockLength:(int)arg2 withFilename:(id)arg3 withFileSize:(int *)arg4 toApplication:(id)arg5;
// - (void)GTServiceClientDidReceiveAttachmentData:(id)arg1 withFilename:(id)arg2 lastBlock:(BOOL)arg3;
// - (BOOL)GTServiceClientDidConnectTo:(id)arg1 withServerCertificate:(id)arg2 withEnterpriseMatch:(BOOL)arg3;
// - (void)GTServiceClientDidReceiveFrom:(id)arg1 withParams:(id)arg2 withAttachments:(id)arg3 correspondingToRequestID:(id)arg4;
// - (void)GTServiceClientWillConnectTo:(id)arg1 withClientCertificate:(id *)arg2 withClientCertificatePrivateKey:(id *)arg3 withPkcs12Password:(id *)arg4 withServerCertificate:(id *)arg5 withEnterpriseUserNumber:(int *)arg6;
// - (void)didReceiveAttachmentData:(id)arg1 withFilename:(id)arg2 lastBlock:(BOOL)arg3;
// - (void)initGoodPKCS;
// - (void)updateGTServiceDirectory;
// - (BOOL)isGTICCServiceInitiated;
// - (void)initGTICCServiceIfNeeded;
// - (void)pushChangePasswordRequest;
// - (void)handleCACAuthenicate;
// - (_Bool)handleSMIMEPolicies;
// - (id)getViewNavigationControllerWithFlag:(BOOL)arg1;
// - (id)getViewNavigationController;
// - (void)startCACSetup;
// - (void)showCACSetupRequiredAlert;
// - (void)flushAnyPendingSettingsSave;
// - (void)saveSettingsInBackground;
// - (void)initiateSaveSettingsInBackground;
// - (void)doSaveSettings;
// - (void)doSaveSettingsMain;
// - (void)WipeCompleted;
// - (void)StartContactWipe;
// - (void)StartContactWipeMain;
// - (void)WipeContacts;
// - (BOOL)ShouldBeLocked;
- (BOOL)passwordCheck
{
    BOOL ret = %orig;
    NSLog(@"SecurityCore passwordCheck: %d", ret);
    return ret;
};;
// - (void)finishDefaultsCleanup;
// - (void)presentExternalAuthenticatorLockOutScreen;
// - (void)notificationEnteredForeground:(id)arg1;
// - (BOOL)externalAuthenticatorAvailable;
// - (BOOL)externalAuthenticatorRequired;
// - (void)handleAuthenticationResponse:(id)arg1;
// - (void)sendAuthenticationRequest;
// - (void)authenticatorPolicyChanged;
// - (void)updateLockFlag;
// - (void)resetLockTimer;
// - (void)onLockTimer;
// - (void)stopLockTimer;
// - (void)startLockTimer;
// - (void)clearPasswordTextFields;
// - (void)removePasswordIdleTimerFromAllTargets;
// - (void)removePasswordIdleTimerTarget:(id)arg1;
// - (void)addPasswordIdleTimerTarget:(id)arg1;
// - (void)startPasswordIdleTimer;
// - (void)stopPasswordIdleTimer;
// - (void)performSecurityCheck;
// - (void)updateGMDFlags:(unsigned int)arg1;
// - (void)alertView:(id)arg1 clickedButtonAtIndex:(int)arg2;
// - (void)showBAIPairingView;
// - (BOOL)pushChangePasswordUI;
// - (void)changeExpiredPassword;
// - (void)changePassword;
// - (void)setGxSecurityPassword:(id)arg1;
// - (void)recheckSecurityAnimated:(BOOL)arg1;
// - (void)dismissSecuritySetupScreen;
// - (void)dismissOtherAlertViews;
// - (void)dismissSecurityAlertViews;
// - (void)initLockSetup;
// - (void)lockGMMAndResetLastAccessedTime;
// - (void)lockGMMAnimated:(BOOL)arg1;
// - (void)displayPasswordReset;
// - (void)displayLockViewAnimated:(BOOL)arg1;
// - (void)delayedDisplayLockViewAnimated:(id)arg1;
// - (void)dismissDisclaimerIfPresent;
// - (void)disclaimerAccepted:(id)arg1;
// - (void)displayDisclaimerAlertView:(BOOL)arg1;
// @property(readonly) BOOL isDisclaimerScreenActive;
// - (struct CSecurityManager *)getSecurityManager;
// - (void)keyPressed:(id)arg1;
// - (void)cacSetupCompleted;
- (void)encryptDBWithCacPin:(const char *)arg1 newPassword:(const char *)arg2
{
    NSLog(@"SecurityCore encryptDBWithCacPin: %s    newPassword: %s", arg1, arg2);
    %orig;
};

- (void)saveCacPin:(id)arg1
{
    NSLog(@"SecurityCore saveCacPin: %@", arg1);
    %orig;
};
// - (void)dealloc;
// - (id)init;
// @property(readonly, nonatomic) UIViewController *currentlyPresentedVC;

// @end
%end
%end
