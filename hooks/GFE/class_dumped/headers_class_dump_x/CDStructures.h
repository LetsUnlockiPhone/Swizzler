/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

struct AAttendeesDatabase {
    void **_field1;
    struct GxVoidArray _field2;
    _Bool _field3;
    unsigned short _field4;
    struct GxLock _field5;
    struct AGoodRecord _field6;
    unsigned short _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    int _field11;
    int _field12;
    short _field13;
    int _field14;
    char *_field15;
    int _field16;
    int _field17;
    struct AFlashFile _field18;
    _Bool _field19;
    struct GxVoidArray _field20;
    struct AGoodRecord _field21;
    struct AGoodRecord _field22;
    struct ABTree *_field23[15];
    unsigned char _field24[15];
    struct AKeyLock _field25[15];
    short _field26;
    short _field27;
    struct ASortedRecordArray *_field28;
    _Bool _field29;
    struct AKeySubsetCollection *_field30;
    _Bool _field31;
};

struct ABSyncSource;

struct ABToGoodDbSyncItemFieldKeyMapper;

struct ABTree {
    void **_field1;
    struct ADatabaseWithKeys *_field2;
    struct GxLongArray _field3;
    struct GxShortArray _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    _Bool _field9[10];
    unsigned short _field10;
    struct ASubkey *_field11;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    int _field12[2];
    unsigned char _field13;
    unsigned char _field14;
    int _field15;
    char *_field16;
    int _field17;
    int _field18;
    unsigned int _field19;
};

struct ABTreeAllRecords {
    void **_field1;
    struct ADatabaseWithKeys *_field2;
    struct GxLongArray _field3;
    struct GxShortArray _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    _Bool _field9[10];
    unsigned short _field10;
    struct ASubkey *_field11;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    int _field12[2];
    unsigned char _field13;
    unsigned char _field14;
    int _field15;
    char *_field16;
    int _field17;
    int _field18;
    unsigned int _field19;
};

struct ABTreeCrushFields {
    void **_field1;
    struct ADatabaseWithKeys *_field2;
    struct GxLongArray _field3;
    struct GxShortArray _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    _Bool _field9[10];
    unsigned short _field10;
    struct ASubkey *_field11;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    int _field12[2];
    unsigned char _field13;
    unsigned char _field14;
    int _field15;
    char *_field16;
    int _field17;
    int _field18;
    unsigned int _field19;
    int _field20;
};

struct ACalendar {
    void **_field1;
    struct GxVoidArray _field2;
    _Bool _field3;
    unsigned short _field4;
    struct GxLock _field5;
    struct AGoodRecord _field6;
    unsigned short _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    int _field11;
    int _field12;
    short _field13;
    int _field14;
    char *_field15;
    int _field16;
    int _field17;
    struct AFlashFile _field18;
    _Bool _field19;
    struct GxVoidArray _field20;
    struct AGoodRecord _field21;
    struct AGoodRecord _field22;
    struct ABTree *_field23[15];
    unsigned char _field24[15];
    struct AKeyLock _field25[15];
    short _field26;
    short _field27;
    struct ASortedRecordArray *_field28;
    _Bool _field29;
    struct AKeySubsetCollection *_field30;
    void **_field31;
    struct GxVoidArray _field32;
    int _field33;
    _Bool _field34;
    void **_field35;
    int _field36;
    int _field37;
    struct AServiceDefinition _field38;
    _Bool _field39;
    void **_field40;
    struct ABTree _field41;
    struct ABTree _field42;
    struct ABTree _field43;
    struct AAttendeesDatabase _field44;
    struct Msg _field45;
    struct ACalendarRecord _field46;
    struct ACalendarCache _field47;
    unsigned char _field48;
    struct AvailArray _field49;
    struct GxLongArray _field50;
    struct AFeatureSetObserverForCalendar *_field51;
    int _field52;
    int _field53;
};

struct ACalendarCache {
    struct CDateTimeBits _field1;
    unsigned int _field2;
    struct ACalendarEventArray _field3;
    struct ACalendar *_field4;
};

struct ACalendarEvent {
    struct CDateTimeBits _field1;
    struct CDateTimeBits _field2;
    unsigned short _field3;
    int _field4;
    _Bool _field5;
};

struct ACalendarEventArray {
    void **_field1;
    char *_field2;
    int _field3;
    int _field4;
    int _field5;
    short _field6;
    _Bool _field7;
};

struct ACalendarRecord {
    void **_vptr$AGoodRecord;
    struct GxVoidArray m_fields;
    struct AGoodDatabase *m_pMom;
    unsigned short m_existingRecordID;
    struct ASubKeyLockRef *m_keyLockRefs;
    _Bool m_readUpdateCalled;
    _Bool m_frequentlyReused;
    _Bool m_locked;
    _Bool m_readOnly;
    _Bool m_notTheOwner;
    unsigned char m_version;
    struct AnEmail m_email;
    struct AGoodRecord m_attendee;
    _Bool m_readWrite;
    _Bool m_doingAnInterimSave;
    int m_cachedGmtStart;
    int m_cachedGmtEnd;
    int m_cachedGmtRecurStart;
    int m_cachedGmtRecurEnd;
    struct CDateTimeBits m_orgStart;
    struct CDateTimeBits m_orgEnd;
    struct CDateTimeBits m_orgRecurStart;
    struct CDateTimeBits m_orgRecurEnd;
};

struct ADatabaseWithKeys;

struct ADocumentRecord {
    void **_field1;
    struct GxVoidArray _field2;
    struct AGoodDatabase *_field3;
    unsigned short _field4;
    struct ASubKeyLockRef *_field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    unsigned char _field11;
};

struct AES {
    void *m_context;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> m_iv;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> m_ivStart;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> m_key;
    unsigned char m_block[16];
    unsigned int m_blockOffset;
    int m_mode;
    struct OSSLContextCarrier *m_osContext;
};

struct AFeatureSetObserverForAddressBook;

struct AFeatureSetObserverForCalendar;

struct AFlashFile {
    void **_field1;
    struct GxLongArray _field2;
    struct GxVoidArray _field3;
    struct GxVoidArray _field4[15];
    struct GxShortArray _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct GxFlash *_field13;
    unsigned short _field14;
    short _field15;
    unsigned short _field16;
    _Bool _field17;
    _Bool _field18;
    unsigned char _field19;
    int _field20;
};

struct AFolder {
    void **_vptr$AGoodRecord;
    struct GxVoidArray m_fields;
    struct AGoodDatabase *m_pMom;
    unsigned short m_existingRecordID;
    struct ASubKeyLockRef *m_keyLockRefs;
    _Bool m_readUpdateCalled;
    _Bool m_frequentlyReused;
    _Bool m_locked;
    _Bool m_readOnly;
    _Bool m_notTheOwner;
    unsigned char m_version;
};

struct AGalDB {
    void **_field1;
    struct GxVoidArray _field2;
    _Bool _field3;
    unsigned short _field4;
    struct GxLock _field5;
    struct AGoodRecord _field6;
    unsigned short _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    int _field11;
    int _field12;
    short _field13;
    int _field14;
    char *_field15;
    int _field16;
    int _field17;
    struct AFlashFile _field18;
    _Bool _field19;
    struct GxVoidArray _field20;
    struct AGoodRecord _field21;
    struct AGoodRecord _field22;
    struct ABTree *_field23[15];
    unsigned char _field24[15];
    struct AKeyLock _field25[15];
    short _field26;
    short _field27;
    struct ASortedRecordArray *_field28;
    _Bool _field29;
    struct AKeySubsetCollection *_field30;
    void **_field31;
    int _field32;
    int _field33;
    struct AServiceDefinition _field34;
    _Bool _field35;
    void **_field36;
    struct GxVoidArray _field37;
    int _field38;
    _Bool _field39;
    struct AnAddressBook *_field40;
    struct ABTree _field41;
    struct ABTree _field42;
    struct ABTree _field43;
};

struct AGoodDatabase;

struct AGoodField {
    void **_field1;
    struct auto_ptr<GxUTF8String> _field2;
    int _field3;
    int _field4;
    unsigned char _field5;
    unsigned int :1;
    unsigned int :1;
    unsigned int :6;
};

struct AGoodRecord {
    void **_vptr$AGoodRecord;
    struct GxVoidArray m_fields;
    struct AGoodDatabase *m_pMom;
    unsigned short m_existingRecordID;
    struct ASubKeyLockRef *m_keyLockRefs;
    _Bool m_readUpdateCalled;
    _Bool m_frequentlyReused;
    _Bool m_locked;
    _Bool m_readOnly;
    _Bool m_notTheOwner;
    unsigned char m_version;
};

struct AKeyLock {
    struct ABTree *_field1;
    _Bool _field2;
    char *_field3;
    int _field4;
};

struct AKeySubsetCollection;

struct AListener {
    void **_field1;
    struct GxVoidArray _field2;
    int _field3;
    _Bool _field4;
};

struct ASBBookmarkRecord {
    void **_field1;
    struct GxVoidArray _field2;
    struct AGoodDatabase *_field3;
    unsigned short _field4;
    struct ASubKeyLockRef *_field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    unsigned char _field11;
};

struct ASMIMEDatabase {
    void **_field1;
    struct GxVoidArray _field2;
    _Bool _field3;
    unsigned short _field4;
    struct GxLock _field5;
    struct AGoodRecord _field6;
    unsigned short _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    int _field11;
    int _field12;
    short _field13;
    int _field14;
    char *_field15;
    int _field16;
    int _field17;
    struct AFlashFile _field18;
    _Bool _field19;
    struct GxVoidArray _field20;
    struct AGoodRecord _field21;
    struct AGoodRecord _field22;
    struct ABTree *_field23[15];
    unsigned char _field24[15];
    struct AKeyLock _field25[15];
    short _field26;
    short _field27;
    struct ASortedRecordArray *_field28;
    _Bool _field29;
    struct AKeySubsetCollection *_field30;
    struct ABTree _field31;
};

struct ASMIMERecord {
    void **_field1;
    struct GxVoidArray _field2;
    struct AGoodDatabase *_field3;
    unsigned short _field4;
    struct ASubKeyLockRef *_field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    unsigned char _field11;
    unsigned short _field12;
};

struct ASQLNSTimerBasedTransactionModel {
    void **_field1;
    struct auto_ptr<SLTransaction> _field2;
    int _field3;
    int _field4;
    struct list<ASQLNotification, std::allocator<ASQLNotification>> _field5;
    id _field6;
};

struct AServiceDefinition {
    int _field1;
    struct MsgRegistry *_field2;
    int _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
};

struct ASortedRecordArray;

struct ASubKeyLockRef;

struct ASubkey;

struct ATaskRecord {
    void **_field1;
    struct GxVoidArray _field2;
    struct AGoodDatabase *_field3;
    unsigned short _field4;
    struct ASubKeyLockRef *_field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    unsigned char _field11;
};

struct AnAddressBook {
    void **_field1;
    struct GxVoidArray _field2;
    _Bool _field3;
    unsigned short _field4;
    struct GxLock _field5;
    struct AGoodRecord _field6;
    unsigned short _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    int _field11;
    int _field12;
    short _field13;
    int _field14;
    char *_field15;
    int _field16;
    int _field17;
    struct AFlashFile _field18;
    _Bool _field19;
    struct GxVoidArray _field20;
    struct AGoodRecord _field21;
    struct AGoodRecord _field22;
    struct ABTree *_field23[15];
    unsigned char _field24[15];
    struct AKeyLock _field25[15];
    short _field26;
    short _field27;
    struct ASortedRecordArray *_field28;
    _Bool _field29;
    struct AKeySubsetCollection *_field30;
    void **_field31;
    struct GxVoidArray _field32;
    int _field33;
    _Bool _field34;
    void **_field35;
    int _field36;
    int _field37;
    struct AServiceDefinition _field38;
    _Bool _field39;
    void **_field40;
    struct T9BTree _field41;
    struct T9BTree _field42;
    struct T9BTree _field43;
    struct T9BTree _field44;
    struct T9BTree _field45;
    struct T9BTree _field46;
    struct ABTreeCrushFields _field47;
    struct ABTreeAllRecords _field48;
    struct ABTree _field49;
    struct ABTree _field50;
    struct ABTree _field51;
    struct ABTree _field52;
    struct PhoneNumABTree _field53;
    struct PhoneNumABTree _field54;
    struct PhoneNumABTree _field55;
    int _field56;
    int _field57;
    struct AnAddressBookRecord _field58;
    struct AnAddressBookRecord _field59;
    int _field60;
    struct AGalDB *_field61;
    struct AFeatureSetObserverForAddressBook *_field62;
};

struct AnAddressBookRecord {
    void **_field1;
    struct GxVoidArray _field2;
    struct AGoodDatabase *_field3;
    unsigned short _field4;
    struct ASubKeyLockRef *_field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    unsigned char _field11;
};

struct AnAttachment {
    void **_vptr$AnAttachment;
    struct GxString m_name;
    int m_size;
    int m_attachNum;
    unsigned char m_hostID;
    int m_emailHostID;
    long m_instanceID;
    unsigned short m_formats;
    unsigned short m_myRecord;
    int m_CacheID;
    _Bool m_forward;
    _Bool m_lockedFwd;
    _Bool m_temp;
    _Bool m_droppedInUpload;
};

struct AnEmail {
    void **_vptr$AGoodRecord;
    struct GxVoidArray m_fields;
    struct AGoodDatabase *m_pMom;
    unsigned short m_existingRecordID;
    struct ASubKeyLockRef *m_keyLockRefs;
    _Bool m_readUpdateCalled;
    _Bool m_frequentlyReused;
    _Bool m_locked;
    _Bool m_readOnly;
    _Bool m_notTheOwner;
    unsigned char m_version;
    int m_folder;
    int m_oldFolder;
    struct AnEmailDatabase *m_pMom;
    unsigned short m_sortTime;
    unsigned int m_dirty:1;
    unsigned int m_statusChanged:1;
    unsigned int m_readStatus:1;
    unsigned int m_priorStatus:1;
    unsigned int m_folderChanged:1;
    unsigned int m_flagChanged:1;
    unsigned int m_uiStatusChanged:1;
    unsigned int m_AVAILABLE:2;
};

struct AnEmailDatabase;

struct AnEmailRecipient {
    int _field1;
    int _field2;
    struct GxUTF8String _field3;
    struct GxUTF8String _field4;
    struct GxUTF8String _field5;
    unsigned short _field6;
    _Bool _field7;
};

struct AppPolicyDatabase {
    void **_field1;
    struct GxVoidArray _field2;
    _Bool _field3;
    unsigned short _field4;
    struct GxLock _field5;
    struct AGoodRecord _field6;
    unsigned short _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    int _field11;
    int _field12;
    short _field13;
    int _field14;
    char *_field15;
    int _field16;
    int _field17;
    struct AFlashFile _field18;
    _Bool _field19;
    struct GxVoidArray _field20;
};

struct ArbitraryThreadAListener {
    void **_field1;
    struct GxVoidArray _field2;
    int _field3;
    _Bool _field4;
    id _field5;
    SEL _field6;
    id _field7;
};

struct AttIdPair {
    int _field1;
    int _field2;
};

struct AvailArray {
    unsigned int _field1;
    unsigned int _field2;
    void **_field3;
    _Bool _field4;
};

struct CCacheEntryReadStream {
    void **_field1;
    long _field2;
    struct GxLock _field3;
    struct GxExternalFileID *_field4;
    unsigned int _field5;
    struct GxCache *_field6;
    struct GxString _field7;
    int _field8;
    int _field9;
    long _field10;
    unsigned long _field11;
    unsigned long _field12;
};

struct CDateTimeBits {
    union {
        unsigned long m_dt;
        struct {
            unsigned int minute:6;
            unsigned int hour:5;
            unsigned int mday:5;
            unsigned int month:4;
            unsigned int year:12;
        } s;
    } u;
};

struct CGColor;

struct CGColorSpace;

struct CGContext;

struct CGDataProvider;

struct CGDataProviderSequentialCallbacks {
    unsigned int _field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct CGGradient;

struct CGImage;

struct CGPDFDocument;

struct CGPDFPage;

struct CGPath;

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct COrcaProvData;

struct CSecurityManager {
    int _field1;
    struct _GmmPasswordSettings *_field2;
    struct _GmmLockSettings *_field3;
    struct _GmmCurrentPasswordSettings *_field4;
    struct _GmmAppPasswordSaltAndHash *_field5;
    struct _GmmSMIMESettings *_field6;
    struct _GmmTempUnlockSettings *_field7;
    struct __sFILE *_field8;
    struct GxLock _field9;
    struct GxLock _field10;
    struct GxLock _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field13;
    int _field14;
    long _field15;
    long _field16;
    int _field17;
    _Bool _field18;
    _Bool _field19;
};

struct CategoryInfo {
    void **_field1;
    int _field2;
    int _field3;
    id _field4;
};

struct CocoaThreadAListener {
    void **_field1;
    struct GxVoidArray _field2;
    int _field3;
    _Bool _field4;
    id _field5;
    SEL _field6;
};

struct Cond {
    struct _opaque_pthread_cond_t m_cond;
};

struct CryptTypeT {
    unsigned int _field1;
};

struct DecryptCacheReadStream {
    void **_field1;
    int _field2;
    char *_field3;
    char *_field4;
    int *_field5;
    unsigned int _field6;
    int _field7;
    struct GxFile _field8;
    unsigned int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    unsigned int _field14;
    int _field15;
    int _field16;
    unsigned int _field17;
    struct structNode _field18[8];
    struct structNode *_field19[8];
    struct structNode *_field20;
    struct structNode *_field21;
};

struct DiscoveryEngineAdapter {
    void **_field1;
    int _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
};

struct DownloadUpdate {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    long _field5;
    int _field6;
    struct GxString _field7;
};

struct EmailMarkingRecord;

struct GCFHTTPAuthChalengeCache {
    void **_field1;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field2;
    struct map<std::basic_string<char>, GCFHTTPAuthInfo *, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, GCFHTTPAuthInfo *>>> _field3;
    struct SBCredentialsStorage *_field4;
    struct GdLock _field5;
    int _field6;
};

struct GCFHTTPAuthInfo {
    void **_field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    int _field3;
    _Bool _field4;
    int _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    _Bool _field7;
    int _field8;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field9;
    struct _CFHTTPAuthentication *_field10;
    struct __CFHTTPMessage *_field11;
};

struct GCFHTTPAuthenticationDispatcher;

struct GCFHTTPChunkDecoder;

struct GCFHTTPResponse {
    void **_field1;
    struct __CFHTTPMessage *_field2;
    long _field3;
    long _field4;
    long _field5;
    int _field6;
    long _field7;
    struct GxLock _field8;
    struct list<std::basic_string<char>, std::allocator<std::basic_string<char>>> _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    struct auto_ptr<GCFHTTPChunkDecoder> _field14;
    void **_field15;
    _Bool _field16;
    int _field17;
};

struct GCHTTPRedirectionCache {
    struct map<std::basic_string<char>, GCHTTPRedirectionCacheItem *, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, GCHTTPRedirectionCacheItem *>>> _field1;
    struct GxLock _field2;
};

struct GHTTPCacheEntry;

struct GHTTPDataTransport {
    struct auto_ptr<GIHTTPData> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
};

struct GHTTPPool;

struct GHTTPProxyConnectionPool;

struct GHTTPTransactor {
    void **_field1;
    void **_field2;
    void **_field3;
    struct GHTTPPool *_field4;
    struct GHTTPProxyConnectionPool *_field5;
    struct SBIAsyncSynchronizer *_field6;
    struct GCHTTPRedirectionCache _field7;
    struct GCFHTTPAuthenticationDispatcher *_field8;
    struct ISBProxyManager *_field9;
    struct SBHTTPRequestProcessor *_field10;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field11;
    struct GxLock _field12;
    struct HTTPTransactorProxyMgrCallback _field13;
};

struct GIHTTPData;

struct GMAEvent {
    void **_field1;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field2;
    void *_field3;
};

struct GMAHTTPTunnelProxyConnection {
    void **_field1;
    int _field2;
    void **_field3;
    unsigned long _field4;
    struct ProxyConnection *_field5;
    struct GMAProxyInfo _field6;
    struct GHTTPTransactor *_field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
    _Bool _field10;
    id _field11;
    struct IProxyEventReceiver *_field12;
    id _field13;
};

struct GMAIdentityCertificateViewCallback {
    void **_field1;
};

struct GMAIdentityPinCallback {
    void **_field1;
};

struct GMAProxyInfo {
    void **_field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    unsigned short _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    int _field5;
};

struct GXFILEHANDLE__;

struct GdLock {
    _Bool _field1;
    char *_field2;
};

struct GmmRestrictedAccessKeyRequester {
    void **_field1;
    struct GxVoidArray _field2;
    int _field3;
    _Bool _field4;
    struct GxVoidArray _field5;
    _Bool _field6;
    unsigned short _field7;
    struct GxLock _field8;
    id _field9;
    struct Mutex _field10;
    _Bool _field11;
};

struct GmmSecureStringStorage {
    void **_field1;
    struct map<std::basic_string<char>, GmmSecureStringStorage::EntryPayload *, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, GmmSecureStringStorage::EntryPayload *>>> _field2;
    struct GxFipsCrypt *_field3;
    struct GxLock _field4;
};

struct GoodDbSyncSource;

struct GoodDbToABSyncItemFieldKeyMapper;

struct GxBuffer {
    void *_field1;
    unsigned int _field2;
    _Bool _field3;
};

struct GxCache {
    int *_field1;
    unsigned int _field2;
    struct GxLock _field3;
};

struct GxEncryptedFile {
    void **_field1;
    struct GXFILEHANDLE__ *_field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned int _field6;
    struct GxFipsCrypt *_field7;
    char *_field8;
    unsigned int _field9;
    char *_field10;
    unsigned int _field11;
    struct GxGrowBuffer *_field12;
    unsigned int _field13;
};

struct GxExternalFileID;

struct GxFile {
    void **_vptr$GxFile;
    struct GXFILEHANDLE__ *m_handle;
    _Bool m_reportErrors;
    _Bool m_bPromptUser;
    _Bool m_bRelativePath;
};

struct GxFipsCrypt;

struct GxFlash;

struct GxGrowBuffer;

struct GxHTTP;

struct GxLock {
    void *pCriticalSection;
};

struct GxLogFileSend {
    void **_field1;
    void *_field2;
    struct GxVoidArray _field3;
    int _field4;
    int _field5;
    void *_field6;
    int _field7;
};

struct GxLongArray {
    unsigned int _field1;
    unsigned int _field2;
    long *_field3;
};

struct GxSecureString {
    void **_field1;
    int *_field2;
    unsigned int _field3;
    unsigned int _field4;
    _Bool _field5;
    _Bool _field6;
};

struct GxShortArray {
    int _field1;
    int _field2;
    short *_field3;
};

struct GxString {
    void **_vptr$GxStringMemoryEraser;
    int *m_s;
    unsigned int m_len;
    unsigned int m_allocated;
    _Bool m_shouldOverwriteMemoryBeforeDeleting;
    _Bool m_clearIsDelete;
};

struct GxTime {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
};

struct GxUTF8String {
    void **_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
    _Bool _field5;
    _Bool _field6;
};

struct GxVoidArray {
    unsigned int m_num;
    unsigned int m_max;
    void **m_p;
};

struct HTTPTransactorProxyMgrCallback {
    void **_field1;
    struct list<GHTTPTransactor::HTTPTransactorProxyMgrCallback::HostProxyDetailsEntry *, std::allocator<GHTTPTransactor::HTTPTransactorProxyMgrCallback::HostProxyDetailsEntry *>> _field2;
    struct GHTTPTransactor *_field3;
    struct GxLock _field4;
};

struct IDownloadSupport {
    void **_field1;
    struct GxVoidArray _field2;
    int _field3;
    _Bool _field4;
    struct GxVoidArray _field5;
    _Bool _field6;
    unsigned short _field7;
    struct GxLock _field8;
    void **_field9;
    struct AnEmailDatabase *_field10;
    int _field11;
    struct GxLock _field12;
    struct GxCache *_field13;
};

struct IGMACompoundGmaConnectionFactory;

struct IKerberosPolicyListener {
    void **_field1;
};

struct ILSChecksumCalculator;

struct IProxyConnection {
    void **_field1;
    unsigned long _field2;
};

struct IProxyEventReceiver;

struct IProxyManagerAsyncCallback;

struct IProxyPolicyListener {
    void **_field1;
};

struct ISBConstantConnection;

struct ISBConstantConnectionTimerCallback {
    void **_field1;
};

struct ISBProxyManager;

struct ISSLCertificateManager {
    void **_field1;
};

struct ISSLManager {
    void **_field1;
    struct ISSLCertificateManager *_field2;
};

struct ISmimeUiAdapter {
    void **_field1;
};

struct LSMappingTable<unsigned short, int>;

struct LSSyncer<unsigned short, AKnownAddressField, int, ABPropertyKey>;

struct Msg {
    void **_field1;
    struct MsgRegistry *_field2;
    struct MsgTypeT _field3;
    struct MsgContent *_field4;
    struct CryptTypeT _field5;
    _Bool _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
};

struct MsgContent;

struct MsgHandler {
    void **_field1;
    int _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
};

struct MsgRegistry;

struct MsgTypeT {
    unsigned char _field1;
};

struct Mutex {
    void **_vptr$Mutex;
    struct _opaque_pthread_mutex_t m_mutex;
};

struct NotificationHolder;

struct NumberOfPeople {
    int _field1;
    int _field2;
};

struct OSSLContextCarrier;

struct PhoneNumABTree {
    void **_field1;
    struct ADatabaseWithKeys *_field2;
    struct GxLongArray _field3;
    struct GxShortArray _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    _Bool _field9[10];
    unsigned short _field10;
    struct ASubkey *_field11;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    int _field12[2];
    unsigned char _field13;
    unsigned char _field14;
    int _field15;
    char *_field16;
    int _field17;
    int _field18;
    unsigned int _field19;
    int _field20;
    struct AGoodField _field21[10];
    struct AGoodField _field22[10];
    struct GxUTF8String _field23;
    unsigned int _field24;
    _Bool _field25;
};

struct ProvApp {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    int _field6;
    unsigned int _field7;
    int _field8;
    char *_field9;
    struct GxHTTP *_field10;
    char *_field11;
    unsigned int _field12;
    unsigned int _field13;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field14;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field15;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field16;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field17;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field18;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field19;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field20;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field21;
    CDAnonymousStruct1 *_field22;
    int _field23;
    char *_field24;
    struct COrcaProvData *_field25;
    int _field26;
    int _field27;
    id _field28;
    struct {
        int _field1;
        char _field2[81];
        char _field3[81];
        char _field4[51];
        char _field5[21];
        char _field6[11];
        char _field7[41];
        char _field8[31];
        char _field9[61];
        char _field10[51];
        int _field11;
        int _field12;
        int _field13;
    } _field29;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field30;
    struct list<std::basic_string<char>, std::allocator<std::basic_string<char>>> _field31;
};

struct ProxyClientConnector {
    void **_field1;
    struct list<IProxyConnection *, std::allocator<IProxyConnection *>> _field2;
    struct ProxyClientFactoryHandler *_field3;
    struct ProxyConnectionFactory *_field4;
    struct GxLock _field5;
    struct ISBConstantConnection *_field6;
    unsigned short _field7;
    struct auto_ptr<IGMACompoundGmaConnectionFactory> _field8;
    struct auto_ptr<IGMACompoundGmaConnectionFactory> _field9;
    void **_field10;
    int _field11;
};

struct ProxyClientFactoryHandler;

struct ProxyConnection;

struct ProxyConnectionFactory;

struct ProxyEventDelegator {
    void **_field1;
    id _field2;
    id _field3;
};

struct SBCookieRecord;

struct SBCredentialsStorage;

struct SBHTTPRequestProcessor;

struct SBIAsyncSynchronizer;

struct SBIResourceContainerFactory {
    void **_field1;
};

struct SBProxyManager {
    void **_field1;
    _Bool _field2;
    struct IProxyManagerAsyncCallback *_field3;
    id _field4;
    id _field5;
    id _field6;
    struct ProxyClientConnector *_field7;
};

struct SBResourceDesc {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    int _field6;
    struct list<std::pair<std::basic_string<char>, std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::basic_string<char>>>> _field7;
    int _field8;
};

struct SBResourceRequesterToken {
    void **_field1;
    int _field2;
    unsigned long long _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    unsigned int _field10;
    struct SBResourceDesc _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field13;
    _Bool _field14;
    _Bool _field15;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field16;
    struct SBIResourceContainerFactory *_field17;
    struct GxLock _field18;
    struct list<SBResourceRequesterToken::DataBlock *, std::allocator<SBResourceRequesterToken::DataBlock *>> _field19;
    struct auto_ptr<GCFHTTPAuthInfo> _field20;
    struct auto_ptr<GIHTTPData> _field21;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field22;
    _Bool _field23;
    struct GHTTPCacheEntry *_field24;
    double _field25;
    _Bool _field26;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field27;
    int _field28;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field29;
    int _field30;
    struct auto_ptr<GMAEvent> _field31;
};

struct SBSSLCertificateChain {
    struct _Vector_impl _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
};

struct SBSSLCertificateChainErrorData {
    void **_field1;
    struct SBSSLCertificateChain _field2;
    int _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    int _field5;
};

struct SBSSLCertificateInfo {
    void **_field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct vector<SBSSLCertificateValidationErrors, std::allocator<SBSSLCertificateValidationErrors>> _field3;
};

struct SLTransaction;

struct SMIMESoftTokenImportData {
    void **_field1;
    struct GxUTF8String _field2;
    struct GxString _field3;
    int _field4;
    int _field5;
    struct GxUTF8String _field6;
};

struct SmimePinMediatorWorker {
    void **_field1;
    struct GxVoidArray _field2;
    int _field3;
    _Bool _field4;
    id _field5;
    _Bool _field6;
};

struct T9BTree {
    void **_field1;
    struct ADatabaseWithKeys *_field2;
    struct GxLongArray _field3;
    struct GxShortArray _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    _Bool _field9[10];
    unsigned short _field10;
    struct ASubkey *_field11;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    int _field12[2];
    unsigned char _field13;
    unsigned char _field14;
    int _field15;
    char *_field16;
    int _field17;
    int _field18;
    unsigned int _field19;
    int _field20;
    struct AGoodField _field21[10];
    struct AGoodField _field22[10];
    struct GxUTF8String _field23;
    unsigned int _field24;
    _Bool _field25;
};

struct UIAListener {
    void **_field1;
    struct GxVoidArray _field2;
    int _field3;
    _Bool _field4;
    id _field5;
    SEL _field6;
    id _field7;
};

struct UIEdgeInsets {
    float top;
    float left;
    float bottom;
    float right;
};

struct UIKerberosCallbackHandler {
    void **_field1;
};

struct _Alloc_hider {
    char *_M_p;
};

struct _CFHTTPAuthentication;

struct _GmmAppPasswordSaltAndHash;

struct _GmmCurrentPasswordSettings;

struct _GmmLockSettings;

struct _GmmPasswordSettings;

struct _GmmSMIMESettings;

struct _GmmTempUnlockSettings;

struct _List_impl {
    struct _List_node_base _M_node;
};

struct _List_node_base {
    struct _List_node_base *_M_next;
    struct _List_node_base *_M_prev;
};

struct _NSRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct _NSZone;

struct _Rb_tree<SBResourceRequesterToken *, std::pair<SBResourceRequesterToken *const, NSURL *>, std::_Select1st<std::pair<SBResourceRequesterToken *const, NSURL *>>, std::less<SBResourceRequesterToken *>, std::allocator<std::pair<SBResourceRequesterToken *const, NSURL *>>> {
    struct _Rb_tree_impl<std::less<SBResourceRequesterToken *>, false> _M_impl;
};

struct _Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>, std::allocator<std::pair<const int, int>>> {
    struct _Rb_tree_impl<std::less<int>, false> _M_impl;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, GCFHTTPAuthInfo *>, std::_Select1st<std::pair<const std::basic_string<char>, GCFHTTPAuthInfo *>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, GCFHTTPAuthInfo *>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, GCHTTPRedirectionCacheItem *>, std::_Select1st<std::pair<const std::basic_string<char>, GCHTTPRedirectionCacheItem *>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, GCHTTPRedirectionCacheItem *>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, GmmSecureStringStorage::EntryPayload *>, std::_Select1st<std::pair<const std::basic_string<char>, GmmSecureStringStorage::EntryPayload *>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, GmmSecureStringStorage::EntryPayload *>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree_impl<std::less<SBResourceRequesterToken *>, false> {
    struct less<SBResourceRequesterToken *> _M_key_compare;
    struct _Rb_tree_node_base _M_header;
    unsigned int _M_node_count;
};

struct _Rb_tree_impl<std::less<int>, false> {
    struct less<int> _M_key_compare;
    struct _Rb_tree_node_base _M_header;
    unsigned int _M_node_count;
};

struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> {
    struct less<std::basic_string<char>> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned int _field3;
};

struct _Rb_tree_node_base {
    int _M_color;
    struct _Rb_tree_node_base *_M_parent;
    struct _Rb_tree_node_base *_M_left;
    struct _Rb_tree_node_base *_M_right;
};

struct _Vector_impl {
    struct SBSSLCertificateInfo **_M_start;
    struct SBSSLCertificateInfo **_M_finish;
    struct SBSSLCertificateInfo **_M_end_of_storage;
};

struct __CFArray;

struct __CFCalendar;

struct __CFDictionary;

struct __CFHTTPMessage;

struct __CFReadStream;

struct __CFTimeZone;

struct __CFWriteStream;

struct __SCNetworkReachability;

struct __SecIdentity;

struct __sFILE;

struct _opaque_pthread_cond_t {
    long __sig;
    char __opaque[24];
};

struct _opaque_pthread_mutex_t {
    long __sig;
    char __opaque[40];
};

struct _opaque_pthread_t;

struct array_list;

struct auto_ptr<ABSyncSource> {
    struct ABSyncSource *_M_ptr;
};

struct auto_ptr<ABToGoodDbSyncItemFieldKeyMapper> {
    struct ABToGoodDbSyncItemFieldKeyMapper *_M_ptr;
};

struct auto_ptr<GCFHTTPAuthInfo> {
    struct GCFHTTPAuthInfo *_field1;
};

struct auto_ptr<GCFHTTPChunkDecoder> {
    struct GCFHTTPChunkDecoder *_field1;
};

struct auto_ptr<GIHTTPData> {
    struct GIHTTPData *_field1;
};

struct auto_ptr<GMAEvent> {
    struct GMAEvent *_field1;
};

struct auto_ptr<GmmSecureStringStorage> {
    struct GmmSecureStringStorage *_M_ptr;
};

struct auto_ptr<GoodDbSyncSource> {
    struct GoodDbSyncSource *_M_ptr;
};

struct auto_ptr<GoodDbToABSyncItemFieldKeyMapper> {
    struct GoodDbToABSyncItemFieldKeyMapper *_M_ptr;
};

struct auto_ptr<GxUTF8String> {
    struct GxUTF8String *_field1;
};

struct auto_ptr<IGMACompoundGmaConnectionFactory> {
    struct IGMACompoundGmaConnectionFactory *_field1;
};

struct auto_ptr<ILSChecksumCalculator> {
    struct ILSChecksumCalculator *_M_ptr;
};

struct auto_ptr<LSMappingTable<unsigned short, int>> {
    struct LSMappingTable<unsigned short, int> *_M_ptr;
};

struct auto_ptr<LSSyncer<unsigned short, AKnownAddressField, int, ABPropertyKey>> {
    struct LSSyncer<unsigned short, AKnownAddressField, int, ABPropertyKey> *_M_ptr;
};

struct auto_ptr<SLTransaction> {
    struct SLTransaction *_field1;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _M_dataplus;
};

struct dispatch_queue_s;

struct dispatch_source_s;

struct gdPairingsTable {
    void **_vptr$ASQLBroadcaster;
    struct GxVoidArray m_listenerThreadList;
    _Bool m_broadcasting;
    unsigned short m_broadcasterId;
    struct GxLock m_listenerThreadsLock;
    char *mASQLDatabaseId;
    int m_tableId;
    unsigned int m_changeNum;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> m_name;
    _Bool m_sendNotifications;
    struct GxVoidArray m_sendNotificationsThreads;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct json_object {
    int _field1;
    void *_field2;
    void *_field3;
    int _field4;
    struct printbuf *_field5;
    union data _field6;
};

struct less<SBResourceRequesterToken *>;

struct less<int>;

struct less<std::basic_string<char>>;

struct lh_table;

struct list<ASQLNotification, std::allocator<ASQLNotification>> {
    struct _List_impl _field1;
};

struct list<GCFHTTPAuthInfo *, std::allocator<GCFHTTPAuthInfo *>> {
    struct _List_impl _M_impl;
};

struct list<GHTTPTransactor::HTTPTransactorProxyMgrCallback::HostProxyDetailsEntry *, std::allocator<GHTTPTransactor::HTTPTransactorProxyMgrCallback::HostProxyDetailsEntry *>> {
    struct _List_impl _field1;
};

struct list<IKerberosPolicyListener *, std::allocator<IKerberosPolicyListener *>> {
    struct _List_impl _M_impl;
};

struct list<IProxyConnection *, std::allocator<IProxyConnection *>> {
    struct _List_impl _field1;
};

struct list<IProxyPolicyListener *, std::allocator<IProxyPolicyListener *>> {
    struct _List_impl _M_impl;
};

struct list<SBResourceRequesterToken::DataBlock *, std::allocator<SBResourceRequesterToken::DataBlock *>> {
    struct _List_impl _field1;
};

struct list<int, std::allocator<int>> {
    struct _List_impl _field1;
};

struct list<std::basic_string<char>, std::allocator<std::basic_string<char>>> {
    struct _List_impl _M_impl;
};

struct list<std::pair<std::basic_string<char>, std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::basic_string<char>>>> {
    struct _List_impl _field1;
};

struct map<SBResourceRequesterToken *, NSURL *, std::less<SBResourceRequesterToken *>, std::allocator<std::pair<SBResourceRequesterToken *const, NSURL *>>> {
    struct _Rb_tree<SBResourceRequesterToken *, std::pair<SBResourceRequesterToken *const, NSURL *>, std::_Select1st<std::pair<SBResourceRequesterToken *const, NSURL *>>, std::less<SBResourceRequesterToken *>, std::allocator<std::pair<SBResourceRequesterToken *const, NSURL *>>> _M_t;
};

struct map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> {
    struct _Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>, std::allocator<std::pair<const int, int>>> _M_t;
};

struct map<std::basic_string<char>, GCFHTTPAuthInfo *, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, GCFHTTPAuthInfo *>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, GCFHTTPAuthInfo *>, std::_Select1st<std::pair<const std::basic_string<char>, GCFHTTPAuthInfo *>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, GCFHTTPAuthInfo *>>> _field1;
};

struct map<std::basic_string<char>, GCHTTPRedirectionCacheItem *, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, GCHTTPRedirectionCacheItem *>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, GCHTTPRedirectionCacheItem *>, std::_Select1st<std::pair<const std::basic_string<char>, GCHTTPRedirectionCacheItem *>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, GCHTTPRedirectionCacheItem *>>> _field1;
};

struct map<std::basic_string<char>, GmmSecureStringStorage::EntryPayload *, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, GmmSecureStringStorage::EntryPayload *>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, GmmSecureStringStorage::EntryPayload *>, std::_Select1st<std::pair<const std::basic_string<char>, GmmSecureStringStorage::EntryPayload *>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, GmmSecureStringStorage::EntryPayload *>>> _field1;
};

struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field1;
};

struct printbuf;

struct shared_count {
    struct sp_counted_base *pi_;
};

struct shared_ptr<EmailMarkingRecord> {
    struct EmailMarkingRecord *_field1;
    struct shared_count _field2;
};

struct shared_ptr<NotificationHolder> {
    struct NotificationHolder *px;
    struct shared_count pn;
};

struct shared_ptr<UIAListener> {
    struct UIAListener *px;
    struct shared_count pn;
};

struct shared_ptr<void> {
    void *px;
    struct shared_count pn;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sp_counted_base;

struct sqlite3;

struct structNode {
    int _field1;
    char *_field2;
    int _field3;
    int _field4;
    struct structNode *_field5;
    struct structNode *_field6;
    struct structNode *_field7;
};

struct vector<ASBBookmarkRecord *, std::allocator<ASBBookmarkRecord *>> {
    struct _Vector_impl _M_impl;
};

struct vector<SBCookieRecord *, std::allocator<SBCookieRecord *>> {
    struct _Vector_impl _field1;
};

struct vector<SBSSLCertificateValidationErrors, std::allocator<SBSSLCertificateValidationErrors>> {
    struct _Vector_impl _field1;
};

struct vector<unsigned int, std::allocator<unsigned int>> {
    struct _Vector_impl _M_impl;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned int total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned int total_out;
    char *msg;
    struct internal_state *state;
    void *zalloc;
    void *zfree;
    void *opaque;
    int data_type;
    unsigned int adler;
    unsigned int reserved;
};

typedef struct {
    double latitude;
    double longitude;
} CDAnonymousStruct2;

typedef struct {
    struct _opaque_pthread_mutex_t _field1;
    int _field2;
    unsigned char _field3;
    struct _opaque_pthread_mutex_t _field4;
    struct _opaque_pthread_cond_t _field5;
    void *_field6;
    struct _opaque_pthread_cond_t _field7;
    struct _opaque_pthread_t *_field8;
    void *_field9;
    unsigned char _field10[36];
    unsigned short _field11;
    unsigned int _field12;
    struct _opaque_pthread_mutex_t _field13;
    struct _opaque_pthread_cond_t _field14;
    unsigned long _field15;
    _Bool _field16;
} CDAnonymousStruct3;

typedef struct {
    CDAnonymousStruct1 *_field1;
    _Bool _field2;
    _Bool _field3;
} CDAnonymousStruct4;

typedef struct {
} CDAnonymousStruct1;

union data {
    int _field1;
    double _field2;
    int _field3;
    struct lh_table *_field4;
    struct array_list *_field5;
    char *_field6;
};

