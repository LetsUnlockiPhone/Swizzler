/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_ABAddressBookAddRecord.h"

#import "GCDAsyncSocketDelegate-Protocol.h"

@class GCDAsyncSocket, GTContainerDH, NSData, NSMutableArray, NSString;

@interface GTICCConnection : _ABAddressBookAddRecord <GCDAsyncSocketDelegate>
{
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> m_pendingData;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> m_command;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> m_currentAttachName;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> m_currentMessageTimestamp;
    NSString *m_currentAttachmentName;
    int m_activeFD;
    int m_readState;
    int m_commandLen;
    int m_numAttach;
    int m_attachNameLen;
    int m_currentAttachLength;
    int m_writtenToFile;
    int m_currentAttachNumber;
    BOOL m_initiating;
    BOOL m_socketIntendsToconnect;
    BOOL m_socketIsConnected;
    BOOL m_secure;
    BOOL m_authorize;
    int m_enterpriseId;
    int m_requestID;
    short m_port;
    BOOL m_enterpriseMatch;
    long long m_lastPairTime;
    NSData *m_clientCert;
    NSData *m_serverCert;
    NSString *m_applicationId;
    NSMutableArray *m_attachments;
    GTContainerDH *m_dhContainer;
    GCDAsyncSocket *m_socket;
    GCDAsyncSocket *m_connectedSocket;
    BOOL m_wasClient;
}

- (void)setM_wasClient:(BOOL)fp8;
- (BOOL)m_wasClient;
- (void)setM_currentAttachmentName:(id)fp8;
- (id)m_currentAttachmentName;
- (void)setM_initiating:(BOOL)fp8;
- (BOOL)m_initiating;
- (void)setM_dhContainer:(id)fp8;
- (id)m_dhContainer;
- (void)setM_requestID:(int)fp8;
- (int)m_requestID;
- (void)setM_attachments:(id)fp8;
- (id)m_attachments;
- (void)setM_connectedSocket:(id)fp8;
- (id)m_connectedSocket;
- (void)setM_socket:(id)fp8;
- (id)m_socket;
- (void)setM_secure:(BOOL)fp8;
- (BOOL)m_secure;
- (void)setM_lastPairTime:(long long)fp8;
- (long long)m_lastPairTime;
- (void)setM_port:(short)fp8;
- (short)m_port;
- (void)setM_applicationId:(id)fp8;
- (id)m_applicationId;
- (void)setM_serverCert:(id)fp8;
- (id)m_serverCert;
- (void)setM_clientCert:(id)fp8;
- (id)m_clientCert;
- (void)setM_enterpriseMatch:(BOOL)fp8;
- (BOOL)m_enterpriseMatch;
- (void)setM_enterpriseId:(int)fp8;
- (int)m_enterpriseId;
- (void)setM_authorize:(BOOL)fp8;
- (BOOL)m_authorize;
- (void)setM_socketIsConnected:(BOOL)fp8;
- (BOOL)m_socketIsConnected;
- (void)setM_socketIntendsToconnect:(BOOL)fp8;
- (BOOL)m_socketIntendsToconnect;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)readData:(id)fp8;
- (void)processMessage;
- (void)clearReadParameters;
- (BOOL)writeData:(id)fp8 tag:(int)fp12;
- (BOOL)validateCert;
- (void)socket:(id)fp8 didReadData:(id)fp12 withTag:(long)fp16;
- (void)socketDidDisconnect:(id)fp8 withError:(id)fp12;
- (void)socketDidSecure:(id)fp8;
- (void)socket:(id)fp8 didAcceptNewSocket:(id)fp12;
- (void)socket:(id)fp8 didWriteDataWithTag:(long)fp12;
- (void)socket:(id)fp8 didConnectToHost:(id)fp12 port:(unsigned short)fp16;
- (struct basic_string<char, std::char_traits<char>, std::allocator<char>>)getCommand;
- (void)resetDHContainer;
- (void)shutdown;
- (void)dealloc;
- (int)nextRequestId;
- (id)init;

@end

