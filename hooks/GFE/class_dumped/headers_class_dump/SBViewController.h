//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

//
// SDK Root: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.1.sdk/
//

#import "GUViewController.h"

#import "SBBookmarkVCDelegate.h"
#import "SBDefferedNavControllerDelegateProtocol.h"
#import "SBGoodVaultInteractionHandlerObserver.h"
#import "SBResourceDataContextUIEventReceiver.h"
#import "UIActionSheetDelegate.h"
#import "UIAlertViewDelegate.h"
#import "UIPopoverControllerDelegate.h"
#import "UIScrollViewDelegate.h"
#import "UITextFieldDelegate.h"
#import "UIWebViewDelegate.h"

@class GUAlertView, NSDate, NSString, NSTimer, NSURL, ProgressTextField, SBActionSheet, SBAuthenticationVC, SBBrowsingHistoryManager, SBDocWebViewBarMgr, SBGoodVaultInteractionHandler, SBOverlayBar, SBPageStateManagerBase, SBResourceDownloader, SBSSLCertificateChainErrorQueue, SBTabHistoryManager, SBToolbarLayoutManager, SBUIWebView, UIButton, UIImageView, UINavigationController, UIPopoverController, UIScrollView, UIView;

@interface SBViewController : GUViewController <SBGoodVaultInteractionHandlerObserver, UITextFieldDelegate, UIWebViewDelegate, UIActionSheetDelegate, UIAlertViewDelegate, UIPopoverControllerDelegate, UIScrollViewDelegate, SBResourceDataContextUIEventReceiver, SBBookmarkVCDelegate, SBDefferedNavControllerDelegateProtocol>
{
    ProgressTextField *urlView;
    UIImageView *urlBackground;
    SBUIWebView *webView;
    UIButton *stopReloadButton;
    UIButton *foldUnfoldButton;
    UIView *urlBar;
    id <UIScrollViewDelegate> _oldWebviewScrollviewDelegate;
    UIScrollView *_webviewScrollview;
    UIView *_uiWebBrowserView;
    int stopReloadButtonMode;
    BOOL isEditingUrlView;
    NSString *_urlBarContentBeforeEdition;
    BOOL isUrlBarFolded;
    SBAuthenticationVC *_authVC;
    NSTimer *timerWhileLoadingPage;
    BOOL doNotHideToolbarOnDisappear;
    BOOL displayingPolicyAlert;
    int lastUserNavAction;
    BOOL bIsProgressActive;
    long totalPercentDownloaded;
    int totalInProgress;
    BOOL canPushDeferredView;
    BOOL shouldPushDeferredView;
    SBActionSheet *_deferredActionSheet;
    UIView *_deferredActionSheetShowFromView;
    int deferredCancelButtonIndex;
    GUAlertView *_deferredAlertView;
    UINavigationController *_deferredNavController;
    BOOL isPushedDeferredNavController;
    NSTimer *delayedUrlLoadingTimer;
    int delayedUrlLoadingRetryCount;
    BOOL viewHasBeenUnloaded;
    BOOL viewHasBeenLoaded;
    NSString *onShowUrl;
    SBToolbarLayoutManager *toolbarLayoutMan;
    BOOL tabBarVisible;
    UIPopoverController *popover;
    struct UIAListener *_sessionDBListener;
    BOOL bHasFailedResource;
    SBOverlayBar *_overlayNavBar;
    BOOL _isFullScreen;
    UIView *_urlBarControls;
    NSString *lastBlockedUrl;
    BOOL _hasAlreadyAppeared;
    SBResourceDownloader *_resourceDownloader;
    SBDocWebViewBarMgr *_docWebViewBarMgr;
    SBPageStateManagerBase *_pageStateManager;
    SBGoodVaultInteractionHandler *_goodVaultHandler;
    int _tabTag;
    SBTabHistoryManager *_tabHistoryManager;
    SBBrowsingHistoryManager *_browsingHistoryManager;
    NSDate *_lastAccessedDate;
    SBSSLCertificateChainErrorQueue *_sslCertificateChainErrorQueue;
    BOOL _loadingPageIsADocument;
    NSURL *_pendingConstantConnURL;
    NSTimer *_loadingTimeOutTimer;
    id <SBWebViewProtocol> delegate;
    SBToolbarLayoutManager *_toolbarLayoutManager;
}

+ (void)disableWebkitCache;
+ (void)earlyInit;
@property(retain, nonatomic) NSString *urlBarContentBeforeEdition; // @synthesize urlBarContentBeforeEdition=_urlBarContentBeforeEdition;
@property(retain, nonatomic) NSDate *lastAccessedDate; // @synthesize lastAccessedDate=_lastAccessedDate;
@property(retain, nonatomic) SBBrowsingHistoryManager *browsingHistoryManager; // @synthesize browsingHistoryManager=_browsingHistoryManager;
@property(retain, nonatomic) SBTabHistoryManager *tabHistoryManager; // @synthesize tabHistoryManager=_tabHistoryManager;
@property(nonatomic) int tabTag; // @synthesize tabTag=_tabTag;
@property(nonatomic) SBAuthenticationVC *authVC; // @synthesize authVC=_authVC;
@property(retain, nonatomic) UIView *urlBar; // @synthesize urlBar;
@property(retain, nonatomic) UIButton *foldUnfoldButton; // @synthesize foldUnfoldButton;
@property(retain, nonatomic) UIButton *stopReloadButton; // @synthesize stopReloadButton;
@property(retain, nonatomic) SBUIWebView *webView; // @synthesize webView;
@property(retain, nonatomic) UIImageView *urlBackground; // @synthesize urlBackground;
@property(retain, nonatomic) ProgressTextField *urlView; // @synthesize urlView;
@property(retain, nonatomic) NSURL *pendingConstantConnURL; // @synthesize pendingConstantConnURL=_pendingConstantConnURL;
@property(nonatomic) BOOL shouldPushDeferredView; // @synthesize shouldPushDeferredView;
@property(nonatomic) BOOL isPushedDeferredNavController; // @synthesize isPushedDeferredNavController;
@property(retain, nonatomic) UINavigationController *deferredNavController; // @synthesize deferredNavController=_deferredNavController;
@property(retain, nonatomic) GUAlertView *deferredAlertView; // @synthesize deferredAlertView=_deferredAlertView;
@property(retain, nonatomic) SBActionSheet *deferredActionSheet; // @synthesize deferredActionSheet=_deferredActionSheet;
@property(retain, nonatomic) SBToolbarLayoutManager *toolbarLayoutManager; // @synthesize toolbarLayoutManager=_toolbarLayoutManager;
@property(retain, nonatomic) SBGoodVaultInteractionHandler *goodVaultHandler; // @synthesize goodVaultHandler=_goodVaultHandler;
@property(nonatomic) id <SBWebViewProtocol> delegate; // @synthesize delegate;
@property(nonatomic) SBPageStateManagerBase *pageStateManager; // @synthesize pageStateManager=_pageStateManager;
@property(nonatomic) BOOL displayingPolicyAlert; // @synthesize displayingPolicyAlert;
@property(nonatomic) SBDocWebViewBarMgr *docWebViewBarMgr; // @synthesize docWebViewBarMgr=_docWebViewBarMgr;
@property(retain, nonatomic) NSTimer *loadingTimeOutTimer; // @synthesize loadingTimeOutTimer=_loadingTimeOutTimer;
@property(retain, nonatomic) UIPopoverController *popover; // @synthesize popover;
@property(retain, nonatomic) NSString *onShowUrl; // @synthesize onShowUrl;
@property(nonatomic) BOOL viewHasBeenLoaded; // @synthesize viewHasBeenLoaded;
@property(retain, nonatomic) NSTimer *delayedUrlLoadingTimer; // @synthesize delayedUrlLoadingTimer;
@property(retain, nonatomic) NSTimer *timerWhileLoadingPage; // @synthesize timerWhileLoadingPage;
- (BOOL)isTheSameUrlWithFragment:(id)arg1;
- (id)parentURL;
- (void)dumpHistory;
- (void)stepBackIntoBackForwardHistory;
- (void)saveHistoryWithUrlStr:(id)arg1 pageTitle:(id)arg2;
- (void)saveHistoryWithUrlStr:(id)arg1 pageTitle:(id)arg2 onlyTabHistory:(BOOL)arg3;
- (void)deferredNavControllerWillDisappear:(id)arg1;
- (void)promptAuthenticationWithAuthInfo:(id)arg1;
- (void)handleResourceDataContextUIEvent:(id)arg1;
- (void)showDownloadError:(id)arg1;
- (void)handleOpenIn:(id)arg1 removeContext:(BOOL)arg2;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (BOOL)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(float)arg3;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)enqueueUrlForComponentTrackingWithUrlRequest:(id)arg1;
- (void)setupOverlayNavBarSizeAndPositionForOrientation:(int)arg1;
- (void)webviewWasTouched;
- (void)showOverlayNavBar:(BOOL)arg1 animated:(BOOL)arg2;
- (void)onToogleFullScreen:(id)arg1;
- (void)toggleFullScreen;
- (BOOL)isFullScreen;
- (void)onResourceWasLoaded:(id)arg1 forceCompletion:(BOOL)arg2;
- (void)onResourceWasLoaded:(id)arg1;
- (void)onResourceFailedLoading:(id)arg1;
- (void)onResourceArrivalForUrl:(id)arg1;
- (void)onDataDownloading:(BOOL)arg1;
- (void)onStartLoadingUrl:(id)arg1;
- (void)checkAddBookmark;
- (void)showDownloadHasFinishedDialogWithParams:(id)arg1;
- (void)saveToVCDidDisappear:(id)arg1;
- (void)showSaveToDialogWithParams:(id)arg1 dialogMessageType:(int)arg2 openedFrom:(int)arg3;
- (void)handleGmmSaveFiles:(id)arg1 toApplicationWithName:(id)arg2 removeContext:(BOOL)arg3;
- (void)handleSaveToShare:(id)arg1 removeContext:(BOOL)arg2;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(int)arg2;
- (void)handleSessionDBMessage:(id)arg1;
- (void)executeJS:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)onKeyboardCanceled:(id)arg1;
- (void)updateUiForOrientation:(int)arg1;
- (void)didRotateFromInterfaceOrientation:(int)arg1;
- (void)didRotateFromOrientationPart2;
- (void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (unsigned int)supportedInterfaceOrientations;
- (BOOL)shouldAutorotate;
- (void)updateUrlBarWithUrlStr:(id)arg1;
- (BOOL)isMainDocumentUrlSameAsUrlStr:(id)arg1;
- (BOOL)isCurrentPageUrlSameAsUrlStr:(id)arg1;
- (id)webviewDocumentURL;
- (id)webviewLocationHref;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)updateTitleWithText:(id)arg1;
- (void)updateTitle:(id)arg1 forCurrentPageUrlStr:(id)arg2;
- (void)updateTitleFromCurrentPage:(id)arg1;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)doAllJSInjections;
- (void)injectPopUpWindowInterceptionScript;
- (void)injectDefaultScript;
- (void)injectiFramePopupScript;
- (void)webViewDidStartLoad:(id)arg1;
- (BOOL)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(int)arg3;
- (BOOL)webViewWrapper:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(int)arg3;
- (void)releaseInterception;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)prepareUiForModal;
- (void)showBookmarksVCForParent:(id)arg1;
- (void)onShowBookmarks:(id)arg1;
- (void)onAddBookmark:(id)arg1;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(int)arg2;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(int)arg2;
- (void)bookmarkVcDidTouchedAddBookmark;
- (void)bookmarkVcDidTouchedOnHomePage;
- (void)bookmarkVcDidTouchedDeleteHistory;
- (void)bookmarkVcDidTouchedOnAddressUrl:(id)arg1;
- (void)bookmarkVCDidFinish:(id)arg1;
- (void)dismissLowPriorityViews:(id)arg1;
- (void)cancelResourceDownloader;
- (BOOL)isResourceDownloaderRunning;
- (void)didFailWithError:(id)arg1;
- (void)onTabCounterTouched:(id)arg1;
- (void)showTabBar:(BOOL)arg1;
- (void)unfoldUrlBar;
- (void)foldUrlBar;
- (void)onRedirectionFromUrlStr:(id)arg1 toUrlStr:(id)arg2;
- (void)showStopReloadButton;
- (void)setStopReloadButtonMode:(int)arg1;
- (void)pageLoadDidEndWithError:(id)arg1;
- (void)pageLoadDidStart;
- (void)setUiState:(int)arg1;
- (void)performAction:(int)arg1;
- (BOOL)closeiFramePopup;
- (BOOL)isCurrentViewAiFramePopup;
- (void)dealloc;
- (void)willMoveToParentViewController:(id)arg1;
- (void)onPageLoadAbortComplete:(id)arg1;
- (void)onLoadUrlTimer:(id)arg1;
- (void)stopCurrentPageLoadingWithCallbackParam:(id)arg1 forceStop:(BOOL)arg2 immediate:(BOOL)arg3;
- (void)stopCurrentPageLoadingThenPerformAction:(int)arg1 forceStop:(BOOL)arg2;
- (void)stopCurrentPageLoadingThenLoadUrl:(id)arg1;
- (BOOL)loadPendingConstantConnURL;
- (id)loadUrlDirect:(id)arg1;
- (void)enableBookmarking:(BOOL)arg1;
- (void)loadEmptyContent;
- (void)onAboutLoadingFullPageDocument:(id)arg1;
- (void)showAlertDocumentLoadingIntoAnotherTab;
- (BOOL)loadUrl:(id)arg1 checkPolicy:(BOOL)arg2 onlyCheckCanLoadURL:(BOOL)arg3;
- (BOOL)loadUrl:(id)arg1;
- (void)reloadCurrentUrl;
- (void)cancelDelayedUrlLoading;
- (void)delayedLoadUrl:(id)arg1;
- (BOOL)isRadioUp:(BOOL)arg1;
- (void)launchExteralBrowserAlert:(id)arg1;
- (void)pushDeferredNavController:(id)arg1;
- (void)pushDeferredAlertView:(id)arg1 withCancelButtonIndex:(int)arg2;
- (void)pushDeferredActionSheet:(id)arg1 withCancelButtonIndex:(int)arg2 showFromView:(id)arg3;
- (void)pushDeferredView;
- (void)resetDeferredViewAttributes;
- (BOOL)checkIPPolicyWithUrl:(id)arg1;
- (BOOL)checkIPPolicyWithUrlStr:(id)arg1;
- (int)canRealizeAction;
- (BOOL)textFieldShouldReturn:(id)arg1;
- (void)stopPageLoadingTimer;
- (void)updateDisplayFromCurrentPage;
- (void)onTimerWhileLoadingPage:(id)arg1;
- (void)openUrl:(id)arg1;
- (void)onStopReload:(id)arg1;
- (void)onEditingDidEnd:(id)arg1;
- (void)onEditingDidBegin:(id)arg1;
- (void)onEditedUrl:(id)arg1;
- (id)validUrlStrForUrlStr:(id)arg1;
- (void)updateToolbar;
- (void)onHome:(id)arg1;
- (void)onForward:(id)arg1;
- (void)onBack:(id)arg1;
- (BOOL)isFunctional;
- (void)updateTabsCounter:(unsigned int)arg1;
- (void)viewDidUnload;
- (void)didReceiveMemoryWarning;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)stopListeningToNotifications;
- (void)startListeningToNotifications;
- (void)onEnteredBackground;
- (void)doSanityCheck;
- (void)lookupWebBrowserView;
- (void)positionUiWebBrowserView;
- (void)updateWebViewContentForOrientation_iPhone:(int)arg1;
- (void)makeMenuBarPartOfWebScrollView_iPhone;
- (void)enableWebBrowserViewDelegateOverride:(BOOL)arg1;
- (BOOL)openHomePageIfDefined;
- (void)processHomePageLoadingAtStartup;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)updateMenuBarUiForOrientation_iPhone:(int)arg1;
- (void)menuBarGoBackFromUrlEditMode_iPhone;
- (void)layoutMenuBar;
- (void)refreshMenuBar;
- (void)initMenuBar;
- (id)getDefaultAutomationScreenName;
- (void)identityCertInstalationComplete;
- (BOOL)handleSslAlertView:(id)arg1 forButtonIndex:(int)arg2 forTag:(int)arg3;
- (BOOL)handleSslActionSheet:(id)arg1 forButtonIndex:(int)arg2 forTag:(int)arg3;
- (void)showDialogAboutSendingClientCertForHost:(id)arg1 url:(id)arg2 params:(id)arg3;
- (id)processedHostNameForHost:(id)arg1 port:(id)arg2;
- (void)showCertificateSummaryWithChainData:(struct SBSSLCertificateChainErrorData *)arg1 serverCert:(BOOL)arg2;
- (void)showCertificateSummaryWithChainData:(struct SBSSLCertificateChainErrorData *)arg1 certChainErrorInfo:(id)arg2 serverCert:(BOOL)arg3;
- (void)promptSSLCertValidErr:(id)arg1;
- (void)installIdentities;
- (id)stringForSSLClientCertErrWithInstallOption:(int)arg1;
- (BOOL)isSSLClientCertErr:(int)arg1;
- (BOOL)shouldShowSSLClientCertErrWithInstallOption:(int)arg1;
- (void)checkSSLClientIdentities;
- (void)askUserAboutSendingClientCertToHostWithParams:(id)arg1;
- (void)askUserAboutSendingClientCertToHostForHardTokenWithParams:(id)arg1;
- (void)askUserAboutSendingClientCertToHostForSoftTokenWithParams:(id)arg1;

@end

