//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

//
// SDK Root: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.1.sdk/
//

#import "UIViewController.h"

#import "UITableViewDataSource.h"
#import "UITableViewDelegate.h"
#import "UITextFieldDelegate.h"

@class Delegate, GUGrayBarButtonItem, GmmSecureTextField, NSMutableDictionary, NSString, UIActivityIndicatorView, UILabel, UIScrollView, UITableView, UITextField, UIView;

@interface SmimeSoftTokenImportInstallCertificateViewController : UIViewController <UITextFieldDelegate, UITableViewDelegate, UITableViewDataSource>
{
    BOOL noMoreQueuedTokensToInstall;
    BOOL isSmimeSoftTokenInstallExportEnabled;
    UILabel *certificateName;
    GmmSecureTextField *certificatePassword;
    UIActivityIndicatorView *activityIndicator;
    UILabel *verifyingPasswordTxt;
    UILabel *messageText;
    UIScrollView *scrollView;
    NSString *certificateNameStr;
    Delegate *workerCallback;
    int presentedViewType;
    UILabel *invalidPasswordText;
    UIView *stepsTopBar;
    UILabel *stepsTopBarMsg;
    UIView *certificatePasswordView;
    UIView *tableHeaderView;
    NSMutableDictionary *tableCells;
    GUGrayBarButtonItem *previousButton;
    GUGrayBarButtonItem *nextButton;
    int currentEditingCell;
    UITableView *setPasswordTableView;
    NSString *requiredPwdErrorString;
    UITextField *currentEditingField;
    UIView *emailMismatchView;
    UILabel *emailMismatchCertificateType;
    UILabel *emailMismatchName;
    UILabel *emailMismatchEmail;
    UILabel *emailMismatchIssuer;
    UILabel *emailMismatchValid;
    UILabel *emailMismatchInstallQuestion;
    UILabel *emailMismatchLabelName;
    UILabel *emailMismatchLabelEmail;
    UILabel *emailMismatchLabelIssuer;
    UILabel *emailMismatchLabelValid;
}

@property(retain, nonatomic) UILabel *emailMismatchLabelValid; // @synthesize emailMismatchLabelValid;
@property(retain, nonatomic) UILabel *emailMismatchLabelIssuer; // @synthesize emailMismatchLabelIssuer;
@property(retain, nonatomic) UILabel *emailMismatchLabelEmail; // @synthesize emailMismatchLabelEmail;
@property(retain, nonatomic) UILabel *emailMismatchLabelName; // @synthesize emailMismatchLabelName;
@property(retain, nonatomic) UILabel *emailMismatchInstallQuestion; // @synthesize emailMismatchInstallQuestion;
@property(retain, nonatomic) UILabel *emailMismatchValid; // @synthesize emailMismatchValid;
@property(retain, nonatomic) UILabel *emailMismatchIssuer; // @synthesize emailMismatchIssuer;
@property(retain, nonatomic) UILabel *emailMismatchEmail; // @synthesize emailMismatchEmail;
@property(retain, nonatomic) UILabel *emailMismatchName; // @synthesize emailMismatchName;
@property(retain, nonatomic) UILabel *emailMismatchCertificateType; // @synthesize emailMismatchCertificateType;
@property(retain, nonatomic) UIView *emailMismatchView; // @synthesize emailMismatchView;
@property(retain, nonatomic) UITextField *currentEditingField; // @synthesize currentEditingField;
@property(retain, nonatomic) NSString *requiredPwdErrorString; // @synthesize requiredPwdErrorString;
@property(retain, nonatomic) UITableView *setPasswordTableView; // @synthesize setPasswordTableView;
@property(nonatomic) int currentEditingCell; // @synthesize currentEditingCell;
@property(retain, nonatomic) GUGrayBarButtonItem *nextButton; // @synthesize nextButton;
@property(retain, nonatomic) GUGrayBarButtonItem *previousButton; // @synthesize previousButton;
@property(retain, nonatomic) NSMutableDictionary *tableCells; // @synthesize tableCells;
@property(retain, nonatomic) UIView *tableHeaderView; // @synthesize tableHeaderView;
@property(retain, nonatomic) UIView *certificatePasswordView; // @synthesize certificatePasswordView;
@property(retain, nonatomic) UILabel *stepsTopBarMsg; // @synthesize stepsTopBarMsg;
@property(retain, nonatomic) UIView *stepsTopBar; // @synthesize stepsTopBar;
@property(nonatomic) BOOL isSmimeSoftTokenInstallExportEnabled; // @synthesize isSmimeSoftTokenInstallExportEnabled;
@property(nonatomic) BOOL noMoreQueuedTokensToInstall; // @synthesize noMoreQueuedTokensToInstall;
@property(retain, nonatomic) UILabel *invalidPasswordText; // @synthesize invalidPasswordText;
@property(nonatomic) int presentedViewType; // @synthesize presentedViewType;
@property(retain, nonatomic) Delegate *workerCallback; // @synthesize workerCallback;
@property(retain, nonatomic) NSString *certificateNameStr; // @synthesize certificateNameStr;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView;
@property(retain, nonatomic) UILabel *messageText; // @synthesize messageText;
@property(retain, nonatomic) UILabel *verifyingPasswordTxt; // @synthesize verifyingPasswordTxt;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(retain, nonatomic) GmmSecureTextField *certificatePassword; // @synthesize certificatePassword;
@property(retain, nonatomic) UILabel *certificateName; // @synthesize certificateName;
- (void)dealloc;
- (int)numberOfTokensToInstall;
- (void)resetPrefrenceStatus;
- (void)resetPasswordFieldsText;
- (id)validateInputPassword;
- (BOOL)canEnableSaveButton:(id)arg1;
- (void)assignFirstResponderToFieldAtIndex:(id)arg1;
- (id)passwordFieldInCell:(id)arg1;
- (id)getToolbar;
- (void)prepareTableHeaderView;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
- (void)setStepMessageForStep:(int)arg1 of:(int)arg2;
- (void)dismiss;
- (id)currentParentView;
- (void)hideEmailMismatchView;
- (void)layoutEmailMismatchView:(id)arg1;
- (void)showEmailMismatchView:(id)arg1;
- (id)passwordRequirementsMessage;
- (void)layoutSetPasswordView;
- (void)hideSetPasswordView;
- (void)showSetPasswordView;
- (void)showInvalidPasswordLastAttemptView;
- (void)showInvalidPasswordView:(int)arg1;
- (void)layoutSuccessInstallMessageView:(id)arg1;
- (void)showSuccessInstallMessage:(id)arg1;
- (void)hideActivityIndicator;
- (void)showActivityIndicator;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (BOOL)textFieldShouldReturn:(id)arg1;
- (BOOL)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)install:(id)arg1;
- (void)nextField:(id)arg1;
- (void)previousField:(id)arg1;
- (void)next:(id)arg1;
- (void)done:(id)arg1;
- (void)cancel:(id)arg1;
- (void)savePassword:(id)arg1;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (void)viewDidUnload;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidLoad;
- (void)drawProgressBar;

@end

