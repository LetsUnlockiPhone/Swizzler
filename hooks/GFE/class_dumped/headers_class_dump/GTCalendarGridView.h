//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

//
// SDK Root: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.1.sdk/
//

#import "UIView.h"

@class GTCalendarCurrentTimeIndicatorView, NSDate, NSDateFormatter, NSMutableArray, NSString, UIColor, UIFont, UIImageView;

@interface GTCalendarGridView : UIView
{
    BOOL _showHalfHourLabel;
    BOOL _showlabels;
    BOOL _showGridLines;
    BOOL _timeIndicatorEnabled;
    NSDate *_date;
    UIFont *_gridFont;
    UIFont *_boldGridFont;
    UIColor *_gridFontColor;
    UIColor *_gridLineColor;
    NSDateFormatter *_timeFormater;
    NSMutableArray *_timeLabels;
    int _minSecondsOfGrid;
    int _maxSecondsOfGrid;
    int _totalSecondsOfGrid;
    float _gridPixelsPerSecond;
    GTCalendarCurrentTimeIndicatorView *_currentTimeIndicatorView;
    UIView *_bubbleContainer;
    float _yInset;
    UIImageView *_gridImageView;
    int _bubbleRightPadding;
    NSString *_keyForBackgroundImage;
    struct CGRect _gridLabelFrame;
    struct CGRect _gridFrame;
}

+ (void)initialize;
@property(retain, nonatomic) NSString *keyForBackgroundImage; // @synthesize keyForBackgroundImage=_keyForBackgroundImage;
@property(nonatomic) int bubbleRightPadding; // @synthesize bubbleRightPadding=_bubbleRightPadding;
@property(retain, nonatomic) UIImageView *gridImageView; // @synthesize gridImageView=_gridImageView;
@property(nonatomic) BOOL timeIndicatorEnabled; // @synthesize timeIndicatorEnabled=_timeIndicatorEnabled;
@property(nonatomic) BOOL showGridLines; // @synthesize showGridLines=_showGridLines;
@property(nonatomic) BOOL showlabels; // @synthesize showlabels=_showlabels;
@property(nonatomic) float yInset; // @synthesize yInset=_yInset;
@property(retain, nonatomic) UIView *bubbleContainer; // @synthesize bubbleContainer=_bubbleContainer;
@property(retain, nonatomic) GTCalendarCurrentTimeIndicatorView *currentTimeIndicatorView; // @synthesize currentTimeIndicatorView=_currentTimeIndicatorView;
@property(nonatomic) float gridPixelsPerSecond; // @synthesize gridPixelsPerSecond=_gridPixelsPerSecond;
@property(nonatomic) int totalSecondsOfGrid; // @synthesize totalSecondsOfGrid=_totalSecondsOfGrid;
@property(nonatomic) int maxSecondsOfGrid; // @synthesize maxSecondsOfGrid=_maxSecondsOfGrid;
@property(nonatomic) int minSecondsOfGrid; // @synthesize minSecondsOfGrid=_minSecondsOfGrid;
@property(retain, nonatomic) NSMutableArray *timeLabels; // @synthesize timeLabels=_timeLabels;
@property(retain, nonatomic) NSDateFormatter *timeFormater; // @synthesize timeFormater=_timeFormater;
@property(nonatomic) struct CGRect gridFrame; // @synthesize gridFrame=_gridFrame;
@property(nonatomic) struct CGRect gridLabelFrame; // @synthesize gridLabelFrame=_gridLabelFrame;
@property(retain, nonatomic) UIColor *gridLineColor; // @synthesize gridLineColor=_gridLineColor;
@property(retain, nonatomic) UIColor *gridFontColor; // @synthesize gridFontColor=_gridFontColor;
@property(nonatomic) BOOL showHalfHourLabel; // @synthesize showHalfHourLabel=_showHalfHourLabel;
@property(retain, nonatomic) UIFont *boldGridFont; // @synthesize boldGridFont=_boldGridFont;
@property(retain, nonatomic) UIFont *gridFont; // @synthesize gridFont=_gridFont;
@property(retain, nonatomic) NSDate *date; // @synthesize date=_date;
- (void)setFrame:(struct CGRect)arg1;
- (void)updateTimeIndicatorWithDate:(id)arg1;
- (void)handleTimeUpdateNotification:(id)arg1;
- (int)secondsOffsetOfPixel:(float)arg1;
- (float)pixelOffsetOfSeconds:(int)arg1;
- (void)setupTimeLabelsWithFormatter:(id)arg1;
- (id)dateFormatterWithLocal:(id)arg1;
- (void)updateGridFramesWithFrame:(struct CGRect)arg1;
- (void)drawLineWithContext:(struct CGContext *)arg1 fromPoint:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3 isDashed:(BOOL)arg4;
- (void)drawGridWithContext:(struct CGContext *)arg1;
- (void)drawHourLabelsWithContext:(struct CGContext *)arg1;
- (void)drawHourLabelsBackgroundWithContext:(struct CGContext *)arg1;
- (void)layoutSubviews;
- (id)stretchableGridImage;
- (void)renderGrid;
- (struct CGRect)gridFrameFromStartSeconds:(int)arg1 toEndSeconds:(int)arg2;
- (void)didEnterBackground:(id)arg1;
- (void)willEnterForeground:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

