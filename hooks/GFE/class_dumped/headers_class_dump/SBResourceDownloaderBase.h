//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

//
// SDK Root: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.1.sdk/
//

#import "NSObject.h"

#import "SBResourceLoaderDelegate.h"

@class NSString, NSURL, SBResourceLoader;

@interface SBResourceDownloaderBase : NSObject <SBResourceLoaderDelegate>
{
    SBResourceLoader *_resourceLoader;
    NSURL *_url;
    int _contentLen;
    int _receivedDataLen;
    NSString *_mimeType;
    NSString *_contentDisposition;
    BOOL _isDownloading;
    BOOL _userCanceled;
    id <SBResourceDownloaderBaseDelegate> _delegate;
}

@property(readonly, nonatomic) int receivedDataLen; // @synthesize receivedDataLen=_receivedDataLen;
@property(readonly, nonatomic) int contentLen; // @synthesize contentLen=_contentLen;
@property(readonly, nonatomic) NSString *contentDisposition; // @synthesize contentDisposition=_contentDisposition;
@property(readonly, nonatomic) NSString *mimeType; // @synthesize mimeType=_mimeType;
@property(readonly, nonatomic) NSURL *url; // @synthesize url=_url;
@property(nonatomic) id <SBResourceDownloaderBaseDelegate> delegate; // @synthesize delegate=_delegate;
- (void)processEmptyResponseForUrl:(id)arg1 withToken:(struct SBResourceRequesterToken *)arg2;
- (void)finalizeResourceLoading:(struct SBResourceDesc *)arg1 hasError:(BOOL)arg2 eor:(BOOL)arg3 startLoadingTime:(unsigned long long)arg4 isUsingCache:(_Bool)arg5;
- (void)wasRedirectedToRequest:(id)arg1 redirectResponse:(id)arg2;
- (void)resourceBeganLoadingForUrl:(id)arg1;
- (void)receivedResourceLastPartForUrl:(id)arg1 resDesc:(struct SBResourceDesc *)arg2 token:(struct SBResourceRequesterToken *)arg3;
- (void)receivedResourcePart:(id)arg1 url:(id)arg2 resDesc:(struct SBResourceDesc *)arg3 token:(struct SBResourceRequesterToken *)arg4;
- (void)receivedResourceFirstPartForUrl:(id)arg1 dataLen:(int)arg2 resDesc:(struct SBResourceDesc *)arg3 token:(struct SBResourceRequesterToken *)arg4;
- (void)processErrorResponseForUrl:(id)arg1 error:(id)arg2;
- (void)stopDownloadingUserCanceled:(BOOL)arg1;
- (BOOL)userCanceled;
- (BOOL)isDownloading;
- (void)cleanUp;
- (void)dealloc;
- (BOOL)startDownloading:(id)arg1 options:(id)arg2;

@end

